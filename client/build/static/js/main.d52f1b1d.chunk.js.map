{"version":3,"sources":["scripts/extra.js","hooks/http.hook.js","context/AuthContext.js","pages/Login.js","pages/Register.js","context/UserContext.js","components/chats/SideBar.js","components/chats/ChatHeading.js","components/messages/Message.js","components/Loader.js","components/messages/Messages.js","components/messages/MessageInput.js","components/Friend.js","components/FriendRequest.js","components/Profile.js","components/EasterEgg.js","hooks/timeout.hook.js","components/OtherProfile.js","pages/Main.js","hooks/winsize.hook.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["animations","randomAnimation","min","max","rand","Math","random","round","getRandom","length","ToBottom","container","document","getElementById","scrollTo","scrollHeight","offsetHeight","getAvatarUrl","id","scale","getTag","tag","className","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","requestFormData","formData","FormData","axios","console","log","clearError","noop","AuthContext","createContext","token","userId","login","logout","reload","isAuthenticated","Login","auth","useContext","username","password","form","setForm","warnStatus","setWarnStatus","warnText","setWarnText","inputErr","setInputErr","changeHandler","e","target","classList","remove","name","value","loginHandler","preventDefault","repPassword","warnInput","style","height","animationIn","isVisible","warnClass","onAnimationEnd","htmlFor","autoComplete","placeholder","type","onChange","onClick","disabled","to","Register","trim","registerHandler","includes","UserContext","avatar","status","load","SideBar","chat","viewState","chatSwitch","hide","socket","chats","chatRoute","history","useHistory","zIndex","Provider","color","size","last","text","src","alt","emit","push","ChatHeading","title","barSwitch","Message","me","avatarId","incomeFormat","setIncomeFormat","hover","setHover","useEffect","format","split","onMouseEnter","onMouseLeave","generateAvatar","Loader","loader","Messages","setVisibleButton","messages","isBottom","setIsBottom","messCount","setMessCount","user","onScroll","thread","scrollMax","scrollTop","transitionName","enter","enterActive","leave","map","msg","index","key","MessageInput","visibleButton","typing","inputText","setInputText","setType","time","Date","timer","setSeconds","getSeconds","useTimer","onExpire","restart","pause","sendMessage","animationOut","animationOutDuration","animationInDuration","animateOnMount","top","behavior","onSubmit","autoFocus","onKeyDown","shiftKey","onKeyUp","focus","Friend","FriendRequest","requestHandler","Profile","setStatus","setAvatar","setEasterEgg","friends","requests","profStatus","setProfStatus","staticStatus","setStaticStatus","avatarStatic","setAvatarStatic","useKonami","code","isAccept","accept","imageHandler","file","files","append","imageId","version","public_id","alert","maxLength","onBlur","onKeyPress","blur","EasterEgg","start","setStart","sound","Audio","callback","timeoutId","timeout","persistRenders","_setTimeout","setTimeout","_clearTimeout","clearTimeout","_useEffect","cancel","useTimeout","play","autoPlay","OtherProfile","usersProfile","setLoad","usernameProfile","setUsernameProfile","setTag","setFriends","isFriend","setIsFriend","paramUserId","useParams","exist","i","readOnly","friendId","Main","otherProfile","isChat","setIsChat","setHide","setUser","loadMessages","setLoadMessages","setChats","typingChats","setTypingChats","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","easterEgg","setUsersProfile","friendRequests","setFriendRequests","useSocket","query","autoConnect","viewSwitch","on","textLast","slice","currentMessages","currentTyping","indexOf","splice","removeAllListeners","connect","rel","href","App","setToken","ready","setReady","setUserId","setUsername","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.d52f1b1d.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nconst animations = ['bounceIn','bounceInLeft','bounceInRight','bounceInUp']\r\n\r\nfunction getRandom(min, max) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    return Math.round(rand);\r\n}\r\n\r\nexport const randomAnimation = () => {\r\n    return animations[getRandom(0,animations.length-1)]\r\n}\r\n\r\nexport const ToBottom = () => {\r\n    let container = document.getElementById('msgs');\r\n    container.scrollTo(0, container.scrollHeight-container.offsetHeight);\r\n}\r\n\r\nexport const getAvatarUrl = (id,scale) =>{\r\n    if(!id) return '/images/load.gif'\r\n    if(scale){\r\n        return `https://res.cloudinary.com/sketchcorp/image/upload/c_fill,h_${scale},w_${scale}/${id}`    \r\n    }\r\n    return `https://res.cloudinary.com/sketchcorp/image/upload/${id}`\r\n}\r\n\r\nexport const getTag = (tag) => {\r\n    switch(tag){\r\n        case 'dev':\r\n            return <div className=\"tag dev\">Dev</div>\r\n        case '+':\r\n            return <div className=\"tag confirmed\">✔</div>\r\n        default:\r\n            return ''\r\n    }\r\n}","import {useState,useCallback} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) =>{\r\n        setLoading(true)\r\n        try{\r\n            if(body){\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n            const response = await fetch(url,{ method,body,headers })\r\n            const data = await response.json()\r\n            // console.log(data)\r\n            if(!response.ok){\r\n                throw new Error(data.message || data ||'Что то пошло не так');\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data;\r\n        }catch(e){\r\n            \r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    },[])\r\n\r\n    const requestFormData = useCallback(async (url, method = 'GET', formData = new FormData(), headers = {}) =>{\r\n        setLoading(true)\r\n        try{\r\n            headers['Content-Type'] = 'application/x-www-form-urlencoded'\r\n\r\n            // let data = null\r\n            // console.log(url)\r\n            // console.log(method)\r\n            // console.log(headers)\r\n\r\n            let data = await axios({\r\n                url,method,headers,\r\n                data:formData\r\n            })\r\n            // const response = await fetch(url,{ method,body,headers })\r\n            // const data = await response.json()\r\n            // console.log(data)\r\n            // if(!response.ok){\r\n            //     throw new Error(data.message || data ||'Что то пошло не так');\r\n            // }\r\n            // console.log(data)\r\n            setLoading(false)\r\n\r\n            return data;\r\n        }catch(e){\r\n            console.log(e)\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    },[])\r\n\r\n    const clearError = useCallback(() => setError(null),[])\r\n\r\n    return {loading, request, requestFormData, error, clearError}\r\n}","import {createContext} from 'react'\r\n\r\nfunction noop(){}\r\n\r\nexport const AuthContext = createContext({\r\n    token:null,\r\n    userId:null,\r\n    login:noop,\r\n    logout:noop,\r\n    reload:noop,\r\n    isAuthenticated:false\r\n})","import React, { useState, useContext } from 'react'\r\nimport {Animated} from \"react-animated-css\";\r\nimport { randomAnimation } from '../scripts/extra'\r\nimport { Link } from 'react-router-dom'\r\nimport '../styles/Login.css'\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nexport default function Login() {\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [form, setForm] = useState({\r\n        username:\"\",password:\"\"\r\n    })\r\n    const [warnStatus, setWarnStatus] = useState(0)\r\n    const [warnText, setWarnText] = useState('')\r\n    const [inputErr, setInputErr] = useState({\r\n        username:0,password:0\r\n    })\r\n    const {loading,request} = useHttp()\r\n\r\n\r\n    const changeHandler = e =>{\r\n        e.target.classList.remove('input-red');\r\n        \r\n        setWarnStatus(0);\r\n        setForm({ ...form,[e.target.name]: e.target.value })\r\n    }\r\n\r\n    const loginHandler = async e=>{\r\n        e.preventDefault()\r\n        setInputErr({...inputErr,username:0,password:0})\r\n\r\n        if(!form.username) {\r\n            setWarnStatus(1)\r\n            setWarnText(\"Логин обязательное поле!\")\r\n            setInputErr({...inputErr,username:1})\r\n            return;\r\n        }\r\n        if(!form.password){\r\n            setWarnStatus(1)\r\n            setWarnText(\"Пароль обязательное поле!\")\r\n            setInputErr({...inputErr,password:1})\r\n            return;\r\n        }\r\n\r\n        try{\r\n            const data = await request('/api/auth/login','POST', {...form})\r\n            auth.login(data.token,data.userId,data.username)\r\n        }catch(e){\r\n            console.log(e.message)\r\n            setWarnStatus(1)\r\n            setWarnText(e.message)\r\n            setInputErr({...inputErr,username:1,password:1,repPassword:1})\r\n        }\r\n    }\r\n\r\n    const warnClass = () => {\r\n        switch(warnStatus){\r\n            case 0:\r\n                return \"warn-hide\"\r\n            case 1:\r\n                return \"warning animated fadeIn\"\r\n            case 2:\r\n                return \"warning\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n    const warnInput = (target) => {\r\n        switch(inputErr[target]){\r\n            case 0:\r\n                return \"\"\r\n            case 1:\r\n                return \"animated shake fast input-red\"\r\n            case 2:\r\n                return \"input-red\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"fullheight\">  \r\n            <Animated style={{height:\"100%\"}} animationIn={randomAnimation()} isVisible={true}> \r\n                <div className=\"auth-container\">\r\n                    <div className=\"wrapper\">\r\n                    <h2>TwiChat v0.8</h2>\r\n                    {/* <img width=\"200px\" src=\"http://pngimg.com/uploads/hedgehog/hedgehog_PNG11.png\" alt=\"ежиг\"/> */}\r\n                    <span className={warnClass()} onAnimationEnd={()=>{setWarnStatus(2)}}>{warnText}</span>\r\n                    <div className=\"left\">\r\n                    <label htmlFor=\"username\">Логин</label>\r\n                    </div>\r\n                    <input \r\n                    autoComplete=\"login\" \r\n                    id=\"username\" \r\n                    name=\"username\"\r\n                    placeholder=\"Введите ник\" \r\n                    type=\"text\"\r\n                    value={form.username}\r\n                    onChange={changeHandler}\r\n                    className={warnInput(\"username\")}\r\n                    onAnimationEnd={()=>{setInputErr({...inputErr,username:2})}}\r\n                    />\r\n                    <div className=\"left\">\r\n                    <label htmlFor=\"password\">Пароль</label>\r\n                    </div>\r\n                    <input \r\n                    autoComplete=\"password\" \r\n                    id=\"password\" \r\n                    name=\"password\"\r\n                    placeholder=\"Введите пароль\" \r\n                    type=\"password\"\r\n                    value={form.password}\r\n                    onChange={changeHandler}\r\n                    className={warnInput(\"password\")}\r\n                    onAnimationEnd={()=>{setInputErr({...inputErr,password:2})}}\r\n                    />\r\n                    <button onClick={loginHandler} disabled={loading}>Войти</button>\r\n                    <Link to='/register'>Еще не зарегистрированы?</Link>\r\n                    </div>\r\n                </div>            \r\n                    \r\n            </Animated>\r\n\r\n        </form>      \r\n    )\r\n}\r\n","import React,{useState, useContext} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Animated } from \"react-animated-css\";\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nexport default function Register() {\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [form, setForm] = useState({\r\n        username:\"\",password:\"\",repPassword:\"\"\r\n    })\r\n    const [warnStatus, setWarnStatus] = useState(0)\r\n    const [warnText, setWarnText] = useState('')\r\n    const [inputErr, setInputErr] = useState({\r\n        username:0,password:0,repPassword:0\r\n    })\r\n    const {loading,request} = useHttp()\r\n    \r\n    const changeHandler = e =>{\r\n        e.target.classList.remove('input-red');\r\n        \r\n        setWarnStatus(0);\r\n        setForm({ ...form,[e.target.name]: e.target.value.trim() })\r\n    }\r\n    const registerHandler = async e =>{\r\n        e.preventDefault()\r\n        setInputErr({...inputErr,username:0,password:0,repPassword:0})\r\n        if(!form.username) {\r\n            setWarnStatus(1)\r\n            setWarnText(\"Логин обязательное поле!\")\r\n            setInputErr({...inputErr,username:1})\r\n            return;\r\n        }\r\n        if(form.username.includes(' ')) {\r\n            setWarnStatus(1)\r\n            setWarnText(\"Логин не дожен содержать пробелов!\")\r\n            setInputErr({...inputErr,username:1})\r\n            return;\r\n        }\r\n        if(!form.password){\r\n            setWarnStatus(1)\r\n            setWarnText(\"Пароль обязательное поле!\")\r\n            setInputErr({...inputErr,password:1})\r\n            return;\r\n        }\r\n        if(form.password!==form.repPassword){\r\n            setWarnStatus(1)\r\n            setInputErr({...inputErr,password:1,repPassword:1})\r\n            setWarnText(\"Пароли не совпадают!\")\r\n            return;\r\n        }\r\n        try{\r\n            const data = await request('/api/auth/register','POST', {...form})\r\n            auth.login(data.token,data.userId,data.username)\r\n        }catch(e){\r\n            console.log(e.message)\r\n            setWarnStatus(1)\r\n            setWarnText(e.message)\r\n            setInputErr({...inputErr,username:1,password:1,repPassword:1})\r\n        }\r\n    }\r\n\r\n    const warnClass = () => {\r\n        switch(warnStatus){\r\n            case 0:\r\n                return \"warn-hide\"\r\n            case 1:\r\n                return \"warning animated fadeIn\"\r\n            case 2:\r\n                return \"warning\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n    const warnInput = (target) => {\r\n        switch(inputErr[target]){\r\n            case 0:\r\n                return \"\"\r\n            case 1:\r\n                return \"animated shake fast input-red\"\r\n            case 2:\r\n                return \"input-red\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"fullheight\">  \r\n            <Animated style={{height:\"100%\"}} animationIn=\"fadeIn\" isVisible={true}> \r\n                <div className=\"auth-container\">\r\n                    <div className=\"wrapper\">\r\n                    <h2>TwiChat v0.8</h2>\r\n                    <span className={warnClass()} onAnimationEnd={()=>{setWarnStatus(2)}}>{warnText}</span>\r\n                    <div className=\"left\">\r\n                    <label htmlFor=\"username\">Логин</label>\r\n                    </div>\r\n                    <input \r\n                    autoComplete=\"login\" \r\n                    id=\"username\" \r\n                    name=\"username\"\r\n                    placeholder=\"Введите ник\" \r\n                    type=\"text\"\r\n                    onChange={changeHandler}\r\n                    className={warnInput(\"username\")}\r\n                    onAnimationEnd={()=>{setInputErr({...inputErr,username:2})}}\r\n\r\n                    />\r\n                    <div className=\"left\">\r\n                    <label htmlFor=\"password\">Пароль</label>\r\n                    </div>\r\n                    <input \r\n                    autoComplete=\"password\" \r\n                    id=\"password\" \r\n                    name=\"password\"\r\n                    placeholder=\"Введите пароль\" \r\n                    type=\"password\"\r\n                    onChange={changeHandler}\r\n                    className={warnInput(\"password\")}\r\n                    onAnimationEnd={()=>{setInputErr({...inputErr,password:2})}}\r\n\r\n                    />\r\n                    <div className=\"left\">\r\n                    <label htmlFor=\"repPassword\">Подтвердите пароль</label>\r\n                    </div>\r\n                    <input \r\n                    autoComplete=\"repPassword\" \r\n                    id=\"repPassword\" \r\n                    name=\"repPassword\"\r\n                    placeholder=\"Подтвердите пароль\" \r\n                    type=\"password\"\r\n                    onChange={changeHandler}\r\n                    className={warnInput(\"repPassword\")}\r\n                    onAnimationEnd={()=>{setInputErr({...inputErr,repPassword:2})}}\r\n                    />\r\n                    <button onClick={registerHandler} disabled={loading}>Зарегистрироваться</button>\r\n                    <Link to='/login'>Уже зарегистрированы?</Link>\r\n                    </div>\r\n                </div>            \r\n                    \r\n            </Animated>\r\n\r\n        </form>   \r\n    )\r\n}\r\n","import {createContext} from 'react'\r\n\r\n// function noop(){}\r\n\r\nexport const UserContext = createContext({\r\n    userId:null,\r\n    username:null,\r\n    avatar:null,\r\n    status:null,\r\n    tag:null,\r\n    load:null\r\n})","import React, { useContext} from 'react'\r\nimport { IoIosArrowBack,IoIosLogOut,IoIosPerson } from \"react-icons/io\";\r\nimport { FaComments } from 'react-icons/fa'\r\nimport {getAvatarUrl} from '../../scripts/extra'\r\n\r\nimport { IconContext } from \"react-icons\";\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useHistory,Link } from 'react-router-dom';\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\n\r\nexport default function SideBar({viewState,chatSwitch,hide,socket,chats,chatRoute}) {\r\n    const {username,avatar,load} = useContext(UserContext);\r\n    const auth = useContext(AuthContext)\r\n    const history = useHistory()\r\n    const logoutHandler = e =>{\r\n        e.preventDefault()\r\n        socket.emit('logout')\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n    const getLastMessage = (chat)=>{\r\n        if(!chats[chat]) return ''\r\n        if(!chats[chat].last) return ''\r\n        if(chats[chat].last.username === username) return `Ты: ${chats[chat].last.text}` \r\n        return `${chats[chat].last.username}: ${chats[chat].last.text}`\r\n    }\r\n    \r\n    return (\r\n        <div id=\"side-bar\" className={viewState ? \" \" : \"side-bar-hide\"} \r\n        style={hide ? {zIndex:-1}:{zIndex:0}}\r\n        >\r\n\t\t\t\t\t<div className=\"heading\">\r\n                        <div \r\n                        id=\"back\"\r\n                        onClick={()=>{chatSwitch()}}\r\n                        > <IoIosArrowBack/> </div>\r\n\t\t\t\t\t\t<div className=\"app-name\">TwiChat v0.8 Beta</div>\r\n                        <div className=\"menu\">\r\n                        {\r\n                            chatRoute ? \r\n                            <IconContext.Provider value={{ color: \"white\", size:\"20px\" }}>\r\n                            <Link onClick={()=>{chatSwitch()}} to=\"/profile\">\r\n                                <IoIosPerson className=\"react-button\"/>\r\n                            </Link>\r\n                            </IconContext.Provider>\r\n                            :\r\n                            <IconContext.Provider value={{ color: \"white\", size:\"20px\" }}>\r\n                            <Link onClick={()=>{chatSwitch()}} to=\"/chat\">\r\n                                <FaComments className=\"react-button\"/>\r\n                            </Link>\r\n                            </IconContext.Provider>\r\n                        }\r\n                        \r\n                        </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tclassName=\"users\" \r\n                        >\r\n                        \r\n                        <div \r\n                            className={`user active`}\r\n                            >\r\n                            <div className=\"user-photo\">{\"C\"}</div>\r\n                            <div className=\"user-info\">\r\n                                <div className=\"name\">{\"Community\"}</div>\r\n                                <div className=\"last-message\">{getLastMessage('community')}</div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"current-user\">\r\n                        <div className=\"user-container\">\r\n                            <Link to='/profile'>\r\n                            <img className={ \"avatar\"+(!load ? \" animated slideInRight\" : ' none')} src={getAvatarUrl(avatar,54)} alt=\"avatar\"/>\r\n                            </Link>\r\n\t\t\t\t\t\t<span className={ \"username\"+(!load ? \" animated slideInRight\" : ' none')}>{username}</span> \r\n                        </div>\r\n                        <IconContext.Provider value={{ color: \"white\", size:\"20px\" }}>\r\n                            <IoIosLogOut onClick={logoutHandler} className=\"react-button\" />\r\n                        </IconContext.Provider>                        \r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { IoMdMail } from \"react-icons/io\";\r\n\r\nexport default function ChatHeading({title,barSwitch}) {\r\n    return (\r\n        <div className=\"chat-header\">\r\n\t\t\t<div className=\"user-info\">\r\n\t\t\t\t<div className=\"user-name\">{title}</div>\r\n            </div>\r\n            <div \r\n            id=\"chats-back\"\r\n            onClick={()=>{barSwitch()}}\r\n            >\r\n\t\t\t\t<IoMdMail/>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {getAvatarUrl} from '../../scripts/extra'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Message({message,me,name,avatarId,userId}) {\r\n    const [incomeFormat, setIncomeFormat] = useState('png')\r\n    const [hover, setHover] = useState(false)\r\n    \r\n\r\n    useEffect(() => {\r\n        let format = avatarId.split('/')[1].split('.')[1]\r\n        setIncomeFormat(format)\r\n    }, [avatarId])\r\n    const mouseEnterHandler = () =>{\r\n        setHover(true)\r\n    }\r\n    const mouseLeaveHandler = () =>{\r\n        setHover(false)\r\n    }\r\n\r\n    const generateAvatar = (avatarId) =>{\r\n        if(incomeFormat === 'gif' && hover){\r\n            return getAvatarUrl(avatarId,69)\r\n        } else{\r\n            return getAvatarUrl(`${avatarId.split('.')[0]}.png`,69)\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div onMouseEnter={mouseEnterHandler} onMouseLeave={mouseLeaveHandler} className={`message-container` + (me ? ' me':' ')}>\r\n            <div className=\"avatarFront\">\r\n                <Link to={`/profile/${userId}`}>\r\n                    <img src={generateAvatar(avatarId)} alt=\"avatar\"/>\r\n                </Link>\r\n            </div>\r\n            <div className=\"data\">\r\n                <div className=\"message\">{message}</div>\r\n                <div className=\"name\">{name}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Loader.css'\r\n\r\nexport default function Loader({loader}) {\r\n    if(loader === 'main') return (\r\n        <div className=\"loader-container\">\r\n            {/* Loading... */}\r\n            <div className=\"loadingio-spinner-dual-ball-1bcrbgm9zs1\"><div className=\"ldio-ws5kmlhv8h\"><div></div><div></div><div></div></div></div>\r\n        </div>\r\n    )\r\n    if(loader === 'messages') return (\r\n        <div className=\"loader-container\">\r\n        <div className=\"loadingio-spinner-ripple-93sai1jh985\"><div className=\"ldio-bn935j38u6\"><div></div><div></div></div></div>\r\n        </div>\r\n    )\r\n    return(\r\n        <div></div>\r\n    )\r\n}\r\n","import React,{useState,useEffect, useContext} from 'react'\r\nimport Message from './Message'\r\nimport { UserContext } from '../../context/UserContext';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\nimport {ToBottom} from '../../scripts/extra'\r\nimport Loader from '../Loader';\r\n\r\nexport default function Messages({setVisibleButton,messages,loading}) {\r\n    const [isBottom, setIsBottom] = useState(true)\r\n    const [messCount,setMessCount] = useState(0)\r\n\r\n    let user = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        ToBottom()\r\n    },[])\r\n    \r\n    useEffect(() => {\r\n        if(messCount !== messages.length){\r\n            setMessCount(messages.length)\r\n            if(messages[messages.length-1].username === user.username) ToBottom()\r\n            if(isBottom) ToBottom()\r\n        }\r\n    }, [messages,user,messCount,isBottom])\r\n\r\n    // useEffect(() => {\r\n    //     effect\r\n        \r\n    // })\r\n    \r\n    function scrollHandler() {\r\n        const thread = document.getElementById(\"msgs\")\r\n        const scrollMax = thread.scrollHeight-thread.offsetHeight\r\n        const scroll = thread.scrollTop;\r\n        if(scrollMax-scrollMax*0.10<scroll){\r\n            setVisibleButton(false)\r\n            setIsBottom(true)\r\n        }else{\r\n            setVisibleButton(true)\r\n            setIsBottom(false)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n\r\n        <div className=\"thread-container\" id=\"msgs\" onScroll={scrollHandler}>\r\n            { loading ? (\r\n                <Loader loader=\"messages\" />\r\n            ) : (\r\n\t\t\t\t<div className=\"thread\" id=\"msgsInner\">\r\n                    <ReactCSSTransitionGroup\r\n                        transitionName={{\r\n                            enter: \"animated\",\r\n                            enterActive: \"zoomIn\",\r\n                            leave: \"animated\",\r\n                        }}\r\n                        >\r\n                    {\r\n                        messages.map((msg, index)=>{               \r\n                            return <Message className=\"fast\" key={index} message={msg.text} me={user.userId === msg.userId ? true : false} name={msg.username} avatarId={msg.avatar} userId={msg.userId} />\r\n                        })\r\n                    }\r\n                    </ReactCSSTransitionGroup>\r\n\t\t\t\t</div>\r\n                )\r\n            }\r\n\r\n\t\t\t</div>\r\n    )\r\n}\r\n","import React,{useState, useContext,useEffect} from 'react'\r\nimport { Animated } from 'react-animated-css';\r\nimport { IoIosArrowDown } from \"react-icons/io\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { useTimer } from 'react-timer-hook';\r\n\r\nexport default function MessageInput({visibleButton,socket,chat,typing,load}) {\r\n    const [inputText,setInputText] = useState(\"\");\r\n    const [type, setType] = useState('')\r\n    const {username,userId,avatar} = useContext(UserContext)\r\n\r\n\r\n    const time = new Date()\r\n    const timer = time.setSeconds(time.getSeconds() + 3);\r\n    const {restart,pause} = useTimer({ timer, onExpire: () => {\r\n        socket.emit('send_typing_off',{username,chat})\r\n    } })\r\n\r\n    useEffect(()=>{\r\n        if(!typing[chat]) return setType('')\r\n        \r\n        if(typing[chat].length<=0){\r\n            setType('')\r\n        }\r\n        else if(typing[chat].length===1){\r\n            setType(`${typing[chat][0]} кастует...`);\r\n        }\r\n        else if(typing[chat].length===2){\r\n            setType(`${typing[chat][0]} и ${typing[chat][1]} кастуют...`);\r\n        }\r\n        else if(typing[chat].length===3){\r\n            setType(`${typing[chat][0]}, ${typing[chat][1]} и ${typing[chat][2]} кастуют...`);\r\n        }\r\n        else{\r\n            setType(`Кастуется мегазаклинание...`);\r\n        }\r\n    },[typing,chat])\r\n\r\n    const keyUpHandler = (e) => {\r\n        if(load) return\r\n\r\n        if(e.key===\"Enter\") return;\r\n        socket.emit('send_typing_on',{username,chat})\r\n        const time = new Date()\r\n        const timer = time.setSeconds(time.getSeconds() + 3);\r\n        restart(timer)\r\n\r\n    }\r\n\r\n    const keyDownHandler = (e) =>{\r\n        if(!(e.key===\"Enter\" && e.shiftKey)){\r\n            if(e.key===\"Enter\"){\r\n                e.preventDefault()\r\n                if(load) return\r\n                sendMessage(inputText)\r\n            }\r\n        }\r\n    }\r\n\r\n    const sendButtonHandler = (e)=>{\r\n        e.preventDefault()\r\n        document.getElementById(\"message\").focus();\r\n        sendMessage(inputText)\r\n    }\r\n\r\n    const sendMessage = (text) => {\r\n        pause()\r\n        socket.emit('send_typing_off',{username,chat})\r\n        if(!text) return \r\n        setInputText('')\r\n        socket.emit('send_message',{text,username,userId,avatar,chat})\r\n    }\r\n\r\n    const scrollDownHandler = () =>{\r\n        const thread = document.getElementById(\"msgs\")\r\n        thread.scrollTo({\r\n            top:thread.scrollHeight,\r\n            behavior: \"smooth\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"scrollContainer\">\r\n                <Animated animationIn=\"bounceIn\" animationOut=\"zoomOutDown\" animationOutDuration={400} animationInDuration={400} isVisible={visibleButton} animateOnMount={false}>\r\n                <button id=\"scrollBottom\" onClick={scrollDownHandler}>\r\n                    <IconContext.Provider value={{ color: \"white\", size:\"26px\" }}>\r\n                        <IoIosArrowDown/> \r\n                    </IconContext.Provider> \r\n                </button>\r\n                </Animated>\r\n            </div>\r\n            \r\n            <div className=\"typing-user animated infinite pulse\">\r\n                    <span>{type}</span> \r\n            </div>\r\n            <div className=\"message-input\">\r\n                \r\n                    <form \r\n                        onSubmit={ (e)=>{ e.preventDefault() } }\r\n                        className=\"message-form\">\r\n\r\n                        <textarea \r\n                            id = \"message\"\r\n                            autoFocus = {true}\r\n                            type = \"text\"\r\n                            className = \"form-control\"\r\n                            value = { inputText }\r\n                            autoComplete = 'off'\r\n                            placeholder = \"Напиши что-то интересное\"\r\n                            onChange = {\r\n                                ({target})=>{\r\n                                \tsetInputText(target.value)\r\n                                }\r\n                            }\r\n                            onKeyDown={keyDownHandler}\r\n                            onKeyUp={keyUpHandler}\r\n                            />\r\n                        {/* <div contentEditable='true'\r\n                            className = \"form-control message-input\"\r\n                        >\r\n                            Напишите что то интересное\r\n                        </div> */}\r\n                        <button\r\n                            disabled = {load} \r\n                            type = \"submit\"\r\n                            className = \"send\"\r\n                            onClick={sendButtonHandler}\r\n                        > ➤ </button>\r\n                    </form>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { getAvatarUrl } from '../scripts/extra'\r\n\r\nexport default function Friend({username,userId,avatar}) {\r\n    return (\r\n        <div className=\"friend-container\">\r\n            <div>\r\n                <Link to={`/profile/${userId}`}>\r\n                    {/* Пофиксить гифки аватарок!! */}\r\n                    <img className=\"avatar\" src={getAvatarUrl(avatar,65)} alt=\"friend-avatar\"/>\r\n                </Link>\r\n            </div>\r\n            <div className=\"username\">{username}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FriendRequest({username,userId,requestHandler}) {\r\n    const acceptHandler = () =>{\r\n        requestHandler(userId,true)\r\n    }\r\n\r\n    const rejectHandler = () =>{\r\n        requestHandler(userId,false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"request\">\r\n            <span>Пользователь {username} хочет добавить вас в друзья</span>\r\n            <div className=\"buttons\">\r\n                <button onClick={acceptHandler} className=\"accept\">Подтвердить</button>\r\n                <button onClick={rejectHandler} className=\"cansel\">Отклонить</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport './Profile.css'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport Friend from './Friend';\r\nimport { UserContext } from '../context/UserContext';\r\nimport useKonami from 'react-use-konami';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { getAvatarUrl } from '../scripts/extra'\r\nimport {getTag} from '../scripts/extra'\r\nimport FriendRequest from './FriendRequest';\r\n\r\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/sketchcorp/upload'\r\nconst CLOUDINARY_UPLOAD_PRESET = 'da9k11cr'\r\n\r\nexport default function Profile({socket,setStatus,setAvatar,setEasterEgg,friends,requests}) {\r\n    const {username,avatar,status,tag,userId} = useContext(UserContext)\r\n    const [profStatus, setProfStatus] = useState('')\r\n    const [staticStatus,setStaticStatus] = useState('')\r\n    const [avatarStatic, setAvatarStatic] = useState(getAvatarUrl(null,180))\r\n    const { requestFormData } = useHttp()\r\n    // const paramUserId = useParams().id\r\n    \r\n    useKonami(()=>{\r\n        // console.log(\"konami\")\r\n        if(tag === 'dev') setEasterEgg(true) \r\n    },{\r\n        code: ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a']\r\n    })\r\n\r\n    useEffect(() => {\r\n        setProfStatus(status)\r\n        setStaticStatus(status)\r\n        if(!avatar) return\r\n        setAvatarStatic(getAvatarUrl(avatar,180))\r\n    }, [status,avatar])\r\n\r\n    useEffect(() => {\r\n        socket.emit('get_friend_requests')\r\n        socket.emit('get_friends')\r\n\r\n    }, [socket,userId])\r\n\r\n    const requestHandler = (userId,isAccept)=>{\r\n        socket.emit('request_handler',{userId,accept:isAccept})\r\n    }\r\n\r\n    const pressHandler = (e) =>{\r\n        if(e.key===\"Enter\") {\r\n            setStaticStatus(e.target.value)\r\n            setStatus(e.target.value)\r\n            socket.emit('update_status',{status:e.target.value})\r\n            e.target.blur()\r\n        }\r\n    }\r\n\r\n    const imageHandler = async e =>{\r\n        let file = e.target.files[0]\r\n        let formData = new FormData()\r\n        formData.append('file',file)\r\n        formData.append('upload_preset',CLOUDINARY_UPLOAD_PRESET)\r\n        setAvatarStatic(getAvatarUrl('v1581959183/levng698wjc23g8d5iua.gif',180))\r\n        try{\r\n            const {data} = await requestFormData(CLOUDINARY_URL, 'POST', formData)\r\n            let imageId = `v${data.version}/${data.public_id}.${data.format}`\r\n            setAvatarStatic(getAvatarUrl(imageId,180))\r\n            socket.emit('update_avatar',{avatar:imageId})\r\n            setAvatar(imageId)\r\n            if(avatar === \"v1581973009/w1xcn5v6tl80hw72lpts.png\") return\r\n            socket.emit('delete_avatar',{avatar})\r\n        } catch(e){\r\n            console.log(e)\r\n            alert(\"Ойййй... Что-то пошло не так при загрузке аватарки. Пожалуйста, нажмите Ctrl+Shift+I и сделайте скриншот консоли. Спасибо ^^ -Скетч\")\r\n            setAvatarStatic(getAvatarUrl(avatar,180))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"profile-container\">\r\n            <div className=\"user-data\">\r\n                <div>\r\n                    <div className=\"image-upload\">\r\n                        <label htmlFor=\"avatar-input\">\r\n                            <div className=\"cover\">Загрузить</div>\r\n                            <img src={avatarStatic} alt=\"avatar\" />\r\n                        </label>\r\n                        <input onChange={imageHandler} id=\"avatar-input\" type=\"file\" accept=\"image/*\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"data-wrapper\">\r\n                <div className=\"username\">{username} {getTag(tag)}</div>\r\n                        <TextareaAutosize\r\n                        maxLength=\"190\"\r\n                        \r\n                        className=\"status\" \r\n                        type=\"text\" \r\n                        value={profStatus} \r\n                        onChange={({target})=>{\r\n                            setProfStatus(target.value)\r\n                        }}\r\n                        onBlur={({target})=>{\r\n                            target.value = staticStatus\r\n                        }}\r\n                        onKeyPress={pressHandler}\r\n                        />\r\n                </div>\r\n            </div>\r\n            <div className=\"requests-container\">\r\n                {\r\n                    requests.map(({username,userId},index)=>{\r\n                        return <FriendRequest key={index} username={username} userId={userId} requestHandler={requestHandler} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div> \r\n        <div className=\"friends-header\">Друзья</div>\r\n        <div className=\"friends-container\" id=\"msgs\">\r\n            <div className=\"friends\" id=\"msgsInner\">\r\n                {\r\n                    friends.map(({username,userId,avatar},index)=>{\r\n                        return <Friend key={index} username={username} userId={userId} avatar={avatar} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className=\"friends-footer\"></div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useTimeout } from '../hooks/timeout.hook'\r\n\r\nexport default function EasterEgg() {\r\n    const [start, setStart] = useState(false)\r\n    const sound  = new Audio('/sounds/lightOff.mp3')\r\n\r\n    useTimeout(()=>{\r\n        setStart(true)\r\n    },3*1000,{ persistRenders: false })\r\n\r\n    useEffect(() => {\r\n        sound.play()\r\n    }, [sound])\r\n    if(start) return (\r\n        <div className=\"easter-egg\">\r\n                <video autoPlay={true} src=\"/videos/dark.mp4\"></video>\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"easter-egg\">\r\n            <div></div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from 'react';\r\n// import { render } from 'react-dom';\r\n// import Hello from './Hello';\r\n// import './style.css';\r\n\r\n//\r\n// useTimeout React Hook\r\n//\r\n// React hook for delaying calls with time\r\nexport const useTimeout = (\r\n  callback, // function to call. No args passed.\r\n  timeout = 0, // delay, ms (default: immediately put into JS Event Queue)\r\n  {\r\n    // manage re-render behavior.\r\n    // by default, a re-render in your component will re-define the callback,\r\n    //    which will cause this timeout to cancel itself.\r\n    // to avoid cancelling on re-renders (but still cancel on unmounts),\r\n    //    set `persistRenders: true,`.\r\n    persistRenders = false,\r\n  } = {},\r\n  // These dependencies are injected for testing purposes.\r\n  // (pure functions - where all dependencies are arguments - is often easier to test)\r\n  _setTimeout = setTimeout,\r\n  _clearTimeout = clearTimeout,\r\n  _useEffect = useEffect,\r\n) => {\r\n  let timeoutId;\r\n  const cancel = () => timeoutId && _clearTimeout(timeoutId);\r\n\r\n  _useEffect(\r\n    () => {\r\n      timeoutId = _setTimeout(callback, timeout);\r\n      return cancel;\r\n    },\r\n    persistRenders\r\n      ? [_setTimeout, _clearTimeout]\r\n      : [callback, timeout, _setTimeout, _clearTimeout],\r\n  );\r\n\r\n  return cancel;\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport './OtherProfile.css'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport Friend from './Friend';\r\nimport { UserContext } from '../context/UserContext';\r\nimport useKonami from 'react-use-konami';\r\nimport { getAvatarUrl } from '../scripts/extra'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {getTag} from '../scripts/extra'\r\n\r\nexport default function OtherProfile({socket,setEasterEgg,usersProfile}) {\r\n    const {userId} = useContext(UserContext)\r\n    const [load, setLoad] = useState(true)\r\n    const [profStatus, setProfStatus] = useState('')\r\n    const [avatarStatic, setAvatarStatic] = useState(getAvatarUrl(null,180))\r\n    const [usernameProfile, setUsernameProfile] = useState('')\r\n    const [tag, setTag] = useState('')\r\n    const [friends, setFriends] = useState([])\r\n    const [isFriend, setIsFriend] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const paramUserId = useParams().id\r\n    \r\n    useKonami(()=>{\r\n        if(usersProfile[paramUserId].tag === 'dev') setEasterEgg(true) \r\n    },{\r\n        code: ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a']\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(userId === paramUserId) return history.push('/profile')\r\n        if(!usersProfile[paramUserId]) return\r\n        if(!usersProfile[paramUserId].exist) return history.push('/profile')\r\n        for(let i = 0; i < usersProfile[paramUserId].friends.length;i++){\r\n            if(usersProfile[paramUserId].friends[i].userId===userId) setIsFriend(true)\r\n        }\r\n        setLoad(false)\r\n        setUsernameProfile(usersProfile[paramUserId].username)\r\n        setProfStatus(usersProfile[paramUserId].status)\r\n        setAvatarStatic(getAvatarUrl(usersProfile[paramUserId].avatar,180))\r\n        setTag(usersProfile[paramUserId].tag)\r\n        setFriends(usersProfile[paramUserId].friends)\r\n        \r\n    }, [paramUserId,usersProfile,history,userId])\r\n\r\n    useEffect(() => {\r\n        socket.emit('get_other_user',{userId:paramUserId})\r\n    }, [socket,paramUserId])\r\n\r\n    const addFriendHandler = () => {\r\n        socket.emit('add_friend',{friendId:paramUserId})\r\n        alert(\"Запрос в друзья отправлен!\")\r\n    }\r\n\r\n    const deleteFriendHandler = () =>{\r\n        setIsFriend(false)\r\n        socket.emit('delete_friend',{friendId:paramUserId})\r\n        socket.emit('get_other_user',{userId:paramUserId})\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"other-profile-container\">\r\n            <div className=\"user-data\">\r\n                <div>\r\n                    <div className=\"image-upload\">\r\n                        <label htmlFor=\"avatar-input\">\r\n                            <img src={avatarStatic} alt=\"avatar\"/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"data-wrapper\">\r\n                    <div className=\"username\">{usernameProfile} {getTag(tag)}</div>\r\n                    <TextareaAutosize\r\n                    maxLength=\"190\"\r\n                    className=\"status\" \r\n                    type=\"text\" \r\n                    value={profStatus} \r\n                    readOnly={true}\r\n                    />\r\n                    <div className=\"buttons\">\r\n                        <button disabled={true}>Написать</button>\r\n                        {\r\n                            !isFriend ?\r\n                            <button disabled={load} onClick={addFriendHandler}>Добавить в друзья</button>\r\n                            :\r\n                            <button disabled={load} onClick={deleteFriendHandler}>Удалить из друзей</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        <div className=\"friends-header\">Друзья</div>\r\n        <div className=\"friends-container\" id=\"msgs\">\r\n            <div className=\"friends\" id=\"msgsInner\">\r\n                {\r\n                    friends.map(({username,userId,avatar},index)=>{\r\n                        return <Friend key={index} username={username} userId={userId} avatar={avatar} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className=\"friends-footer\"></div>\r\n        </>\r\n    )\r\n}\r\n","import React,{useState, useEffect, useContext} from 'react'\r\nimport SideBar from '../components/chats/SideBar'\r\nimport ChatHeading from '../components/chats/ChatHeading'\r\nimport Messages from '../components/messages/Messages'\r\nimport MessageInput from '../components/messages/MessageInput'\r\nimport '../styles/Main.css'\r\nimport { Animated } from 'react-animated-css'\r\nimport { useWindowSize } from '../hooks/winsize.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {UserContext} from '../context/UserContext'\r\nimport useSocket from 'use-socket.io-client'\r\nimport Profile from '../components/Profile'\r\nimport EasterEgg from '../components/EasterEgg'\r\nimport OtherProfile from '../components/OtherProfile'\r\n\r\nexport default function Main({chatRoute,otherProfile}) {\r\n    const auth = useContext(AuthContext)\r\n    const [isChat,setIsChat] = useState(true)\r\n    const [hide, setHide] = useState(false)\r\n    const [visibleButton, setVisibleButton] = useState(false)\r\n    const history = useHistory()\r\n    const [user, setUser] = useState({\r\n        username:'',avatar:'',userId:'',status:'',load:true\r\n    })\r\n    const [chat] = useState('community')\r\n    const [loadMessages,setLoadMessages] = useState(true)\r\n    const [chats, setChats] = useState({})\r\n    const [typingChats,setTypingChats] = useState({})\r\n    const [width] = useWindowSize()\r\n    const [easterEgg, setEasterEgg] = useState(false)\r\n    const [usersProfile, setUsersProfile] = useState({})\r\n    const [friendRequests, setFriendRequests] = useState([])\r\n    const [friends, setFriends] = useState([])\r\n\r\n    \r\n    const [socket] = useSocket({\r\n        query: {\r\n            token:auth.token\r\n        },\r\n        autoConnect: false\r\n    });   \r\n\r\n    useEffect(()=>{\r\n        socket.on('connect',()=>{\r\n            // console.log(\"Connected\")\r\n        })\r\n        socket.on('reload', ()=>{\r\n            auth.reload()\r\n        })\r\n        socket.on('logout', ()=>{\r\n            auth.logout()\r\n            history.push('/')\r\n        })\r\n        socket.on('load_user_info',(user)=>{\r\n            setUser({...user,load:false})\r\n        })\r\n        socket.on('load_messages',(messages) =>{            \r\n            setLoadMessages(false)\r\n            let last = null\r\n            if(messages.length > 0){\r\n                let text = messages[messages.length-1].text\r\n                let textLast = text.slice(0,15);\r\n                if (textLast.length < text.length) {\r\n                    textLast += '...';\r\n                }\r\n                last = {...messages[messages.length-1],text:textLast}\r\n            }\r\n            let chat = 'community'\r\n            setChats({[chat]:{messages:[...messages],last,typing:[]}})\r\n            \r\n        })\r\n        socket.on('push_message',({chat,username,userId,text,avatar})=>{\r\n            let message = {username,userId,text,avatar}\r\n            let currentMessages = chats[chat] ? chats[chat].messages : []\r\n            let currentTyping = chats[chat] ? chats[chat].typing : []\r\n\r\n            var textLast = text.slice(0,15);\r\n            if (textLast.length < text.length) {\r\n                textLast += '...';\r\n            }\r\n            setChats({...chats,[chat]:{messages:[...currentMessages,message],last:{...message,text:textLast},typing:[...currentTyping]}})\r\n        })\r\n        socket.on('push_typing_on',({username,chat})=>{\r\n            let currentTyping = typingChats[chat] ? typingChats[chat] : []\r\n            \r\n            if (currentTyping.indexOf(username) < 0) {\r\n                currentTyping.push(username);\r\n            }\r\n            if (currentTyping.indexOf(user.username) > -1) {\r\n                currentTyping.splice(currentTyping.indexOf(user.username), 1);\r\n            }\r\n            \r\n            setTypingChats({...typingChats,[chat]:currentTyping})\r\n        })\r\n        socket.on('push_typing_off',({username,chat})=>{\r\n            let currentTyping = typingChats[chat] ? typingChats[chat] : []\r\n            \r\n            if (currentTyping.indexOf(username) > -1) {\r\n                currentTyping.splice(currentTyping.indexOf(username), 1);\r\n            }\r\n            \r\n            setTypingChats({...typingChats,[chat]:currentTyping})\r\n        })\r\n        socket.on('push_other_user',({exist,userId,username,status,avatar,tag,friends})=>{\r\n            if(!exist) {\r\n                return setUsersProfile({...usersProfile,[userId]:{exist:false}})   \r\n            }\r\n            setUsersProfile({...usersProfile,[userId]:{exist:true,username,status,avatar,tag,friends}})\r\n\r\n        })\r\n        socket.on('push_friend_requests',(friendRequests)=>{\r\n            setFriendRequests(friendRequests)\r\n        })\r\n        socket.on('push_friends',(friends)=>{\r\n            console.log('push_friends')\r\n            setFriends(friends)\r\n        })\r\n\r\n        return(\r\n            ()=>{\r\n                socket.removeAllListeners();\r\n            }\r\n        )\r\n    },[socket,chats,history,auth,user,typingChats,usersProfile])\r\n\r\n    useEffect(()=>{\r\n        socket.connect();\r\n        // console.log('connect')\r\n    },[socket])\r\n    \r\n    function viewSwitch(){\r\n        if(width>510) return\r\n        if(isChat){\r\n            setTimeout((setHide)=>{\r\n                setHide(true)\r\n            },400,setHide)\r\n        }else{\r\n            setHide(false)\r\n        }\r\n        setIsChat(!isChat)\r\n    }\r\n\r\n    const setStatus = (status) => {\r\n        setUser({...user, status})\r\n    }\r\n\r\n    const setAvatar = (avatar) => {\r\n        setUser({...user, avatar})\r\n    }\r\n\r\n    if(easterEgg){\r\n        return <EasterEgg />\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{ username: user.username, avatar: user.avatar, userId:user.userId,status:user.status,tag:user.tag,load:user.load }} >\r\n            <link rel=\"stylesheet\" href=\"/themes/Dark.css\"/>\r\n            <div className=\"container\">\r\n                { chatRoute ?\r\n                <Animated style={width<=510 ? {width:\"100%\",height:\"100%\"} :  {width:\"76.25%\",height:\"100%\"}} animationIn=\"slideInLeft\" animationOut=\"slideOutLeft\" animationInDuration={400} animationOutDuration={400} isVisible={isChat} animateOnMount={false}> \r\n                <div style={{width:\"100%\"}} className={\"chat-room-container\" + (!hide ? \" chat-active\": \" chat-hide\")}>\r\n                    <div className=\"chat-room\">\r\n                        <ChatHeading title={\"Community\"} barSwitch={viewSwitch} />\r\n                        <Messages messages={chats[chat] ? chats[chat].messages : []} setVisibleButton={setVisibleButton} visibleButton={visibleButton} loading={loadMessages} />\r\n                        <MessageInput load={loadMessages} typing={typingChats} chat={chat} socket={socket} visibleButton={visibleButton} />\r\n                    </div>\r\n                </div>\r\n                </Animated>\r\n                :\r\n                <Animated style={width<=510 ? {width:\"100%\",height:\"100%\"} :  {width:\"76.25%\",height:\"100%\"}} animationIn=\"slideInLeft\" animationOut=\"slideOutLeft\" animationInDuration={400} animationOutDuration={400} isVisible={isChat} animateOnMount={false}> \r\n                <div style={{width:\"100%\"}} className={\"chat-room-container\" + (!hide ? \" chat-active\": \" chat-hide\")}>\r\n                    <div className=\"chat-room\">\r\n                        <ChatHeading title={\"Профиль\"} barSwitch={viewSwitch} />\r\n                        {\r\n                            !otherProfile ?\r\n                            <Profile friends={friends} requests={friendRequests} setAvatar={setAvatar} setEasterEgg={setEasterEgg} setStatus={setStatus} socket={socket} />\r\n                            :\r\n                            <OtherProfile usersProfile={usersProfile} setEasterEgg={setEasterEgg} socket={socket} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                </Animated>\r\n                } \r\n                <SideBar chatRoute={chatRoute} chats={chats} chat={chat} socket={socket} viewState={width<=510 ? !isChat : false} chatSwitch={viewSwitch} hide={width<=510 ? !hide : false} />\r\n            </div>\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n","import {useLayoutEffect,useState} from 'react'\r\n\r\nexport const useWindowSize = () => {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener('resize', updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n}","import React from 'react';\r\nimport './index.css';\r\n// import Chat from './pages/Chat';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n// import ChatContainer from './components/chats/ChatContainer';\r\nimport { useRoutes } from './routes';\r\nimport { useAuth } from './hooks/auth.hook';\r\nimport Loader from './components/Loader';\r\nimport { AuthContext } from './context/AuthContext';\r\n// import EasterEgg from './components/EasterEgg';\r\n\r\n\r\nfunction App() {\r\n  const {token,login,logout,reload,userId,ready} = useAuth()\r\n  const isAuthenticated = !!token;\r\n  const routes = useRoutes(isAuthenticated);\r\n\r\n\r\n  if(!ready){\r\n    return <Loader loader=\"main\"/>\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      token,login,logout,reload,userId,isAuthenticated\r\n    }}>\r\n      <Router>\r\n            {routes}\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {useState,useCallback,useEffect} from 'react'\r\n\r\nconst storageName = 'Pony'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n    const [username, setUsername] = useState(null)\r\n\r\n    const login = useCallback((jwtToken,id,username)=>{\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n        setUsername(username)\r\n\r\n        localStorage.setItem(storageName,JSON.stringify({\r\n            token: jwtToken,userId: id,username\r\n        }))\r\n    },[])\r\n\r\n    const logout = useCallback(()=>{\r\n        setToken(null);\r\n        setUserId(null);\r\n        setUsername(null)\r\n        localStorage.removeItem(storageName)\r\n    },[])\r\n\r\n    const reload = useCallback(()=>{\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n        if(!(data && data.token)) logout()\r\n    },[logout])\r\n\r\n    useEffect(()=>{\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n        if(data && data.token){\r\n            login(data.token,data.userId,data.username)\r\n        }\r\n        setReady(true)\r\n    },[login])\r\n\r\n    return {login,logout,token,reload,userId,username,ready}\r\n}","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n// import Chat from './pages/Chat'\r\nimport Login from './pages/Login'\r\nimport Register from './pages/Register'\r\n// import Wrapper from './Wrapper'\r\nimport Main from './pages/Main'\r\n\r\n\r\nexport const useRoutes = isAuthenticated =>{\r\n    if(isAuthenticated){\r\n        return(\r\n            <Switch>\r\n                <Route path='/chat' exact>\r\n                    <Main chatRoute={true} />\r\n                </Route>\r\n                <Route path='/profile' exact>\r\n                    <Main/>\r\n                </Route>\r\n                <Route path='/profile/:id' exact>\r\n                    <Main otherProfile={true} />\r\n                </Route>\r\n                <Redirect to=\"/chat\" />\r\n            </Switch>\r\n        )\r\n    }\r\n    return(\r\n        <Switch>\r\n            <Route path='/login' exact>\r\n                <Login />\r\n            </Route>\r\n            <Route path='/register' exact>\r\n                <Register />\r\n            </Route>\r\n            <Redirect to=\"/login\" />\r\n        </Switch>\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}