{"version":3,"sources":["scripts/extra.js","hooks/http.hook.js","context/AuthContext.js","pages/Login.js","pages/Register.js","context/UserContext.js","components/chats/SideBar.js","components/chats/ChatHeading.js","components/messages/Message.js","components/Loader.js","components/messages/Messages.js","components/messages/MessageInput.js","hooks/winsize.hook.js","components/Friend.js","components/FriendRequest.js","components/Profile.js","components/EasterEgg.js","hooks/timeout.hook.js","components/OtherProfile.js","pages/Main.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["animations","randomAnimation","min","max","rand","Math","random","round","getRandom","length","ToBottom","delay","container","document","getElementById","setTimeout","scrollTo","scrollHeight","offsetHeight","getAvatarUrl","id","scale","getTag","tag","className","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","requestFormData","formData","FormData","axios","console","log","clearError","noop","AuthContext","createContext","token","userId","login","logout","reload","isAuthenticated","Login","auth","useContext","username","password","form","setForm","warnStatus","setWarnStatus","warnText","setWarnText","inputErr","setInputErr","changeHandler","e","target","classList","remove","name","value","loginHandler","preventDefault","repPassword","warnInput","style","height","animationIn","isVisible","warnClass","onAnimationEnd","htmlFor","autoComplete","placeholder","type","onChange","onClick","disabled","to","Register","trim","registerHandler","includes","UserContext","avatar","status","load","SideBar","viewState","chatSwitch","hide","socket","chats","chat","chatRoute","chatButtons","history","useHistory","getLastMessage","last","text","zIndex","Provider","color","size","map","index","chatId","key","src","alt","width","emit","push","ChatHeading","title","barSwitch","Message","me","avatarId","incomeFormat","setIncomeFormat","hover","setHover","useEffect","format","split","onMouseEnter","onMouseLeave","generateAvatar","Loader","loader","Messages","setVisibleButton","messages","next","finishMessages","RefreshChat","isBottom","setIsBottom","messCount","setMessCount","scrollState","setScrollState","nextState","setNextState","refresh","setRefresh","isScroll","setIsScroll","user","thread","scrollMax","onScroll","scroll","scrollTop","transitionName","enter","enterActive","transitionEnterTimeout","transitionLeave","msg","i","MessageInput","visibleButton","typing","inputText","setInputText","setType","paramsChatId","useParams","time","Date","timer","setSeconds","getSeconds","useTimer","expiryTimestamp","onExpire","restart","pause","sendMessage","sendTo","animationOut","animationOutDuration","animationInDuration","animateOnMount","top","onSubmit","autoFocus","onKeyDown","shiftKey","onKeyUp","focus","Friend","FriendRequest","requestHandler","Profile","setStatus","setAvatar","setEasterEgg","friends","requests","profStatus","setProfStatus","staticStatus","setStaticStatus","avatarStatic","setAvatarStatic","useKonami","code","isAccept","accept","imageHandler","file","files","append","imageId","version","public_id","alert","maxLength","onBlur","onKeyPress","blur","EasterEgg","start","setStart","sound","Audio","callback","timeoutId","timeout","persistRenders","_setTimeout","_clearTimeout","clearTimeout","_useEffect","cancel","useTimeout","play","autoPlay","OtherProfile","usersProfile","setLoad","usernameProfile","setUsernameProfile","setTag","setFriends","isFriend","setIsFriend","paramUserId","exist","readOnly","friendId","Main","otherProfile","direct","isChat","setIsChat","setHide","setUser","setChat","loadMessages","setLoadMessages","setChats","setChatButtons","typingChats","setTypingChats","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","easterEgg","setUsersProfile","friendRequests","setFriendRequests","setFinishMessages","loadChats","setLoadChats","useSocket","query","autoConnect","viewSwitch","on","chatButtonsPush","lasts","textLast","slice","isFinish","currentMessages","currentTyping","indexOf","splice","userIds","usernameIds","avatars","notMe","removeAllListeners","connect","rel","href","getChatHeader","App","setToken","ready","setReady","setUserId","setUsername","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.4873bc5d.chunk.js","sourcesContent":["\nimport React from 'react'\nconst animations = ['bounceIn','bounceInLeft','bounceInRight','bounceInUp']\n\nfunction getRandom(min, max) {\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\n    return Math.round(rand);\n}\n\nexport const randomAnimation = () => {\n    return animations[getRandom(0,animations.length-1)]\n}\n\nexport const ToBottom = (delay) => {\n    let container = document.getElementById('msgs')\n    // if(!container) return\n    if(delay) return setTimeout((container)=>{\n        container.scrollTo(0, container.scrollHeight-container.offsetHeight)\n    },delay,container)\n    container.scrollTo(0, container.scrollHeight-container.offsetHeight)\n}\n\nexport const ScrollTo = (to) => {\n    let container = document.getElementById('msgs')\n    // if(!container) return\n    container.scrollTo(0, to)\n}\n\nexport const getAvatarUrl = (id,scale) =>{\n    if(!id) return '/images/load.gif'\n    if(scale){\n        return `https://res.cloudinary.com/sketchcorp/image/upload/c_fill,h_${scale},w_${scale}/${id}`    \n    }\n    return `https://res.cloudinary.com/sketchcorp/image/upload/${id}`\n}\n\nexport const getTag = (tag) => {\n    switch(tag){\n        case 'dev':\n            return <div className=\"tag dev\">Dev</div>\n        case '+':\n            return <div className=\"tag confirmed\">✔</div>\n        default:\n            return ''\n    }\n}","import {useState,useCallback} from 'react'\nimport axios from 'axios'\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) =>{\n        setLoading(true)\n        try{\n            if(body){\n                body = JSON.stringify(body)\n                headers['Content-Type'] = 'application/json'\n            }\n            const response = await fetch(url,{ method,body,headers })\n            const data = await response.json()\n            // console.log(data)\n            if(!response.ok){\n                throw new Error(data.message || data ||'Что то пошло не так');\n            }\n\n            setLoading(false)\n\n            return data;\n        }catch(e){\n            \n            setLoading(false)\n            setError(e.message)\n            throw e\n        }\n    },[])\n\n    const requestFormData = useCallback(async (url, method = 'GET', formData = new FormData(), headers = {}) =>{\n        setLoading(true)\n        try{\n            headers['Content-Type'] = 'application/x-www-form-urlencoded'\n\n            // let data = null\n            // console.log(url)\n            // console.log(method)\n            // console.log(headers)\n\n            let data = await axios({\n                url,method,headers,\n                data:formData\n            })\n            // const response = await fetch(url,{ method,body,headers })\n            // const data = await response.json()\n            // console.log(data)\n            // if(!response.ok){\n            //     throw new Error(data.message || data ||'Что то пошло не так');\n            // }\n            // console.log(data)\n            setLoading(false)\n\n            return data;\n        }catch(e){\n            console.log(e)\n            setLoading(false)\n            setError(e.message)\n            throw e\n        }\n    },[])\n\n    const clearError = useCallback(() => setError(null),[])\n\n    return {loading, request, requestFormData, error, clearError}\n}","import {createContext} from 'react'\n\nfunction noop(){}\n\nexport const AuthContext = createContext({\n    token:null,\n    userId:null,\n    login:noop,\n    logout:noop,\n    reload:noop,\n    isAuthenticated:false\n})","import React, { useState, useContext } from 'react'\nimport {Animated} from \"react-animated-css\";\nimport { randomAnimation } from '../scripts/extra'\nimport { Link } from 'react-router-dom'\nimport './Login.css'\nimport { useHttp } from '../hooks/http.hook';\nimport { AuthContext } from '../context/AuthContext';\n\nexport default function Login() {\n    const auth = useContext(AuthContext);\n\n    const [form, setForm] = useState({\n        username:\"\",password:\"\"\n    })\n    const [warnStatus, setWarnStatus] = useState(0)\n    const [warnText, setWarnText] = useState('')\n    const [inputErr, setInputErr] = useState({\n        username:0,password:0\n    })\n    const {loading,request} = useHttp()\n\n\n    const changeHandler = e =>{\n        e.target.classList.remove('input-red');\n        \n        setWarnStatus(0);\n        setForm({ ...form,[e.target.name]: e.target.value })\n    }\n\n    const loginHandler = async e=>{\n        e.preventDefault()\n        setInputErr({...inputErr,username:0,password:0})\n\n        if(!form.username) {\n            setWarnStatus(1)\n            setWarnText(\"Логин обязательное поле!\")\n            setInputErr({...inputErr,username:1})\n            return;\n        }\n        if(!form.password){\n            setWarnStatus(1)\n            setWarnText(\"Пароль обязательное поле!\")\n            setInputErr({...inputErr,password:1})\n            return;\n        }\n\n        try{\n            const data = await request('/api/auth/login','POST', {...form})\n            auth.login(data.token,data.userId,data.username)\n        }catch(e){\n            console.log(e.message)\n            setWarnStatus(1)\n            setWarnText(e.message)\n            setInputErr({...inputErr,username:1,password:1,repPassword:1})\n        }\n    }\n\n    const warnClass = () => {\n        switch(warnStatus){\n            case 0:\n                return \"warn-hide\"\n            case 1:\n                return \"warning animated fadeIn\"\n            case 2:\n                return \"warning\"\n            default:\n                return \"\"\n        }\n    }\n    const warnInput = (target) => {\n        switch(inputErr[target]){\n            case 0:\n                return \"\"\n            case 1:\n                return \"animated shake fast input-red\"\n            case 2:\n                return \"input-red\"\n            default:\n                return \"\"\n        }\n    }\n\n    return (\n        <form className=\"fullheight\">  \n            <Animated style={{height:\"100%\"}} animationIn={randomAnimation()} isVisible={true}> \n                <div className=\"auth-container\">\n                    <div className=\"wrapper\">\n                    <h2>TwiChat v0.8.1</h2>\n                    {/* <img width=\"200px\" src=\"http://pngimg.com/uploads/hedgehog/hedgehog_PNG11.png\" alt=\"ежиг\"/> */}\n                    <span className={warnClass()} onAnimationEnd={()=>{setWarnStatus(2)}}>{warnText}</span>\n                    <div className=\"left\">\n                    <label htmlFor=\"username\">Логин</label>\n                    </div>\n                    <input \n                    autoComplete=\"login\" \n                    id=\"username\" \n                    name=\"username\"\n                    placeholder=\"Введите ник\" \n                    type=\"text\"\n                    value={form.username}\n                    onChange={changeHandler}\n                    className={warnInput(\"username\")}\n                    onAnimationEnd={()=>{setInputErr({...inputErr,username:2})}}\n                    />\n                    <div className=\"left\">\n                    <label htmlFor=\"password\">Пароль</label>\n                    </div>\n                    <input \n                    autoComplete=\"password\" \n                    id=\"password\" \n                    name=\"password\"\n                    placeholder=\"Введите пароль\" \n                    type=\"password\"\n                    value={form.password}\n                    onChange={changeHandler}\n                    className={warnInput(\"password\")}\n                    onAnimationEnd={()=>{setInputErr({...inputErr,password:2})}}\n                    />\n                    <button onClick={loginHandler} disabled={loading}>Войти</button>\n                    <Link to='/register'>Еще не зарегистрированы?</Link>\n                    </div>\n                </div>            \n                    \n            </Animated>\n\n        </form>      \n    )\n}\n","import React,{useState, useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Animated } from \"react-animated-css\";\nimport { useHttp } from '../hooks/http.hook';\nimport { AuthContext } from '../context/AuthContext';\n\nexport default function Register() {\n    const auth = useContext(AuthContext);\n\n    const [form, setForm] = useState({\n        username:\"\",password:\"\",repPassword:\"\"\n    })\n    const [warnStatus, setWarnStatus] = useState(0)\n    const [warnText, setWarnText] = useState('')\n    const [inputErr, setInputErr] = useState({\n        username:0,password:0,repPassword:0\n    })\n    const {loading,request} = useHttp()\n    \n    const changeHandler = e =>{\n        e.target.classList.remove('input-red');\n        \n        setWarnStatus(0);\n        setForm({ ...form,[e.target.name]: e.target.value.trim() })\n    }\n    const registerHandler = async e =>{\n        e.preventDefault()\n        setInputErr({...inputErr,username:0,password:0,repPassword:0})\n        if(!form.username) {\n            setWarnStatus(1)\n            setWarnText(\"Логин обязательное поле!\")\n            setInputErr({...inputErr,username:1})\n            return;\n        }\n        if(form.username.includes(' ')) {\n            setWarnStatus(1)\n            setWarnText(\"Логин не дожен содержать пробелов!\")\n            setInputErr({...inputErr,username:1})\n            return;\n        }\n        if(!form.password){\n            setWarnStatus(1)\n            setWarnText(\"Пароль обязательное поле!\")\n            setInputErr({...inputErr,password:1})\n            return;\n        }\n        if(form.password!==form.repPassword){\n            setWarnStatus(1)\n            setInputErr({...inputErr,password:1,repPassword:1})\n            setWarnText(\"Пароли не совпадают!\")\n            return;\n        }\n        try{\n            const data = await request('/api/auth/register','POST', {...form})\n            auth.login(data.token,data.userId,data.username)\n        }catch(e){\n            console.log(e.message)\n            setWarnStatus(1)\n            setWarnText(e.message)\n            setInputErr({...inputErr,username:1,password:1,repPassword:1})\n        }\n    }\n\n    const warnClass = () => {\n        switch(warnStatus){\n            case 0:\n                return \"warn-hide\"\n            case 1:\n                return \"warning animated fadeIn\"\n            case 2:\n                return \"warning\"\n            default:\n                return \"\"\n        }\n    }\n    const warnInput = (target) => {\n        switch(inputErr[target]){\n            case 0:\n                return \"\"\n            case 1:\n                return \"animated shake fast input-red\"\n            case 2:\n                return \"input-red\"\n            default:\n                return \"\"\n        }\n    }\n\n    return (\n        <form className=\"fullheight\">  \n            <Animated style={{height:\"100%\"}} animationIn=\"fadeIn\" isVisible={true}> \n                <div className=\"auth-container\">\n                    <div className=\"wrapper\">\n                    <h2>TwiChat v0.8.1</h2>\n                    <span className={warnClass()} onAnimationEnd={()=>{setWarnStatus(2)}}>{warnText}</span>\n                    <div className=\"left\">\n                    <label htmlFor=\"username\">Логин</label>\n                    </div>\n                    <input \n                    autoComplete=\"login\" \n                    id=\"username\" \n                    name=\"username\"\n                    placeholder=\"Введите ник\" \n                    type=\"text\"\n                    onChange={changeHandler}\n                    className={warnInput(\"username\")}\n                    onAnimationEnd={()=>{setInputErr({...inputErr,username:2})}}\n\n                    />\n                    <div className=\"left\">\n                    <label htmlFor=\"password\">Пароль</label>\n                    </div>\n                    <input \n                    autoComplete=\"password\" \n                    id=\"password\" \n                    name=\"password\"\n                    placeholder=\"Введите пароль\" \n                    type=\"password\"\n                    onChange={changeHandler}\n                    className={warnInput(\"password\")}\n                    onAnimationEnd={()=>{setInputErr({...inputErr,password:2})}}\n\n                    />\n                    <div className=\"left\">\n                    <label htmlFor=\"repPassword\">Подтвердите пароль</label>\n                    </div>\n                    <input \n                    autoComplete=\"repPassword\" \n                    id=\"repPassword\" \n                    name=\"repPassword\"\n                    placeholder=\"Подтвердите пароль\" \n                    type=\"password\"\n                    onChange={changeHandler}\n                    className={warnInput(\"repPassword\")}\n                    onAnimationEnd={()=>{setInputErr({...inputErr,repPassword:2})}}\n                    />\n                    <button onClick={registerHandler} disabled={loading}>Зарегистрироваться</button>\n                    <Link to='/login'>Уже зарегистрированы?</Link>\n                    </div>\n                </div>            \n                    \n            </Animated>\n\n        </form>   \n    )\n}\n","import {createContext} from 'react'\n\n// function noop(){}\n\nexport const UserContext = createContext({\n    userId:null,\n    username:null,\n    avatar:null,\n    status:null,\n    tag:null,\n    load:null\n})","import React, { useContext} from 'react'\nimport { IoIosArrowBack,IoIosLogOut,IoIosPerson } from \"react-icons/io\";\nimport { FaComments } from 'react-icons/fa'\nimport {getAvatarUrl, ToBottom} from '../../scripts/extra'\n// import {} from 'react-router-dom'\nimport { IconContext } from \"react-icons\";\nimport { AuthContext } from '../../context/AuthContext';\nimport { useHistory,Link } from 'react-router-dom';\nimport { UserContext } from '../../context/UserContext';\n\n\nexport default function SideBar({viewState,chatSwitch,hide,socket,chats,chat,chatRoute,chatButtons}) {\n    const {username,avatar,load} = useContext(UserContext);\n    const auth = useContext(AuthContext)\n    const history = useHistory()\n    const logoutHandler = e =>{\n        e.preventDefault()\n        socket.emit('logout')\n        auth.logout()\n        history.push('/')\n    }\n    const getLastMessage = (chat)=>{\n        if(!chats[chat]) return ''\n        if(!chats[chat].last) return ''\n        if(chats[chat].last.username === username) return `Ты: ${chats[chat].last.text}` \n        return `${chats[chat].last.username}: ${chats[chat].last.text}`\n    }\n    \n    return (\n        <div id=\"side-bar\" className={viewState ? \" \" : \"side-bar-hide\"} \n        style={hide ? {zIndex:-1}:{zIndex:0}}\n        >\n\t\t\t\t\t<div className=\"heading\">\n                        <div \n                        id=\"back\"\n                        onClick={()=>{chatSwitch()}}\n                        > <IoIosArrowBack/> </div>\n\t\t\t\t\t\t<div className=\"app-name\">TwiChat v0.8.1 Beta</div>\n                        <div onClick={()=>{chatSwitch()}} className=\"menu\">\n                        {\n                            chatRoute ? \n                            <IconContext.Provider value={{ color: \"white\", size:\"20px\" }}>\n                            <Link to=\"/profile\">\n                                <IoIosPerson className=\"react-button\"/>\n                            </Link>\n                            </IconContext.Provider>\n                            :\n                            <IconContext.Provider value={{ color: \"white\", size:\"20px\" }}>\n                            <Link to=\"/chat\">\n                                <FaComments className=\"react-button\"/>\n                            </Link>\n                            </IconContext.Provider>\n                        }\n                        \n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"users\" >\n                        \n                        <Link onClick={()=>{chatSwitch();ToBottom();}} to='/chat'>                        \n                        <div \n                            className={`user `+ (chat === 'community' ? 'active' : '') }\n                            >\n                            <div className=\"user-photo\">{\"C\"}</div>\n                            <div className=\"user-info\">\n                                <div className=\"name\">{\"Community\"}</div>\n                                <div className=\"last-message\">{getLastMessage('community')}</div>\n                            </div>\n                            \n                        </div>\n                        </Link>\n\n                        {\n                            chatButtons.map(({chatId,userId,username,avatar},index)=>{\n                                // console.log()\n                                if(!getLastMessage(chatId)) return <></>\n                                return (\n                                <Link key={index} onClick={()=>{chatSwitch();ToBottom();}} to={`/direct/${userId}`}>                        \n                                <div \n                                    className={`user `+ (chat === chatId ? 'active' : '') }\n                                    >\n                                    <div className=\"user-photo\">\n                                        <img className=\"chat-avatar\" src={getAvatarUrl(avatar,65)} alt=\"chatAvatar\" width=\"65\"/>\n                                    </div>\n                                    <div className=\"user-info\">\n                                        <div className=\"name\">{username}</div>\n                                        <div className=\"last-message\">{getLastMessage(chatId)}</div>\n                                    </div>\n                                    \n                                </div>\n                                </Link>\n                                )\n                            })\n                        }\n\n                        {/* <Link onClick={()=>{chatSwitch();ToBottom();}}  to='/direct/5e4fd4eeff2bff4adca003a7'>                        \n                        <div \n                            className={`user`}\n                            >\n                            <div className=\"user-photo\">{\"A\"}</div>\n                            <div className=\"user-info\">\n                                <div className=\"name\">{\"Admin\"}</div>\n                                <div className=\"last-message\">{getLastMessage('community')}</div>\n                            </div>\n                            \n                        </div>\n                        </Link> */}\n\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"current-user\">\n                        <div className=\"user-container\">\n                            <Link to='/profile'>\n                            <img className={ \"avatar\"+(!load ? \" animated slideInRight\" : ' none')} onClick={()=>{chatSwitch()}} src={getAvatarUrl(avatar,54)} alt=\"avatar\"/>\n                            </Link>\n\t\t\t\t\t\t<span className={ \"username\"+(!load ? \" animated slideInRight\" : ' none')}>{username}</span> \n                        </div>\n                        <IconContext.Provider value={{ color: \"white\", size:\"20px\" }}>\n                            <IoIosLogOut onClick={logoutHandler} className=\"react-button\" />\n                        </IconContext.Provider>                        \n\t\t\t\t\t</div>\n\t\t\t</div>\n    )\n}\n","import React from 'react'\n\nimport { IoMdMail } from \"react-icons/io\";\n\nexport default function ChatHeading({title,barSwitch}) {\n    return (\n        <div className=\"chat-header\">\n\t\t\t<div className=\"user-info\">\n\t\t\t\t<div className=\"user-name\">{title}</div>\n            </div>\n            <div \n            id=\"chats-back\"\n            onClick={()=>{barSwitch()}}\n            >\n\t\t\t\t<IoMdMail/>\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport {getAvatarUrl} from '../../scripts/extra'\nimport {Link} from 'react-router-dom'\n\nexport default function Message({message,me,name,avatarId,userId}) {\n    const [incomeFormat, setIncomeFormat] = useState('png')\n    const [hover, setHover] = useState(false)\n    \n\n    useEffect(() => {\n        let format = avatarId.split('/')[1].split('.')[1]\n        setIncomeFormat(format)\n    }, [avatarId])\n    const mouseEnterHandler = () =>{\n        setHover(true)\n    }\n    const mouseLeaveHandler = () =>{\n        setHover(false)\n    }\n\n    const generateAvatar = (avatarId) =>{\n        if(incomeFormat === 'gif' && hover){\n            return getAvatarUrl(avatarId,69)\n        } else{\n            return getAvatarUrl(`${avatarId.split('.')[0]}.png`,69)\n        }\n        \n    }\n    return (\n        <div onMouseEnter={mouseEnterHandler} onMouseLeave={mouseLeaveHandler} className={`message-container` + (me ? ' me':' ')}>\n            <div className=\"avatarFront\">\n                <Link to={(me ? `/profile`:`/profile/${userId}`)}>\n                    <img src={generateAvatar(avatarId)} alt=\"avatar\"/>\n                </Link>\n            </div>\n            <div className=\"data\">\n                <div className=\"message\">{message}</div>\n                <div className=\"name\">{name}</div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './Loader.css'\n\nexport default function Loader({loader}) {\n    if(loader === 'main') return (\n        <div className=\"loader-container\">\n            {/* Loading... */}\n            <div className=\"loadingio-spinner-dual-ball-1bcrbgm9zs1\"><div className=\"ldio-ws5kmlhv8h\"><div></div><div></div><div></div></div></div>\n        </div>\n    )\n    if(loader === 'messages') return (\n        <div className=\"loader-container\">\n        <div className=\"loadingio-spinner-ripple-93sai1jh985\"><div className=\"ldio-bn935j38u6\"><div></div><div></div></div></div>\n        </div>\n    )\n    if(loader === 'msgload') return(\n        <div className=\"loadingio-spinner-ellipsis-ls8rjpa7b19\"><div className=\"ldio-xetx4216ci\"><div></div><div></div><div></div><div></div><div></div></div></div>\n    )\n    return(\n        <div></div>\n    )\n}\n","import React,{useState,useEffect, useContext} from 'react'\nimport Message from './Message'\nimport { UserContext } from '../../context/UserContext';\n// import ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport {ToBottom,ScrollTo} from '../../scripts/extra'\nimport Loader from '../Loader';\n\nexport default function Messages({setVisibleButton,messages,loading,socket,next,finishMessages,chat,RefreshChat}) {\n    const [isBottom, setIsBottom] = useState(true)\n    const [messCount,setMessCount] = useState(0)\n    const [scrollState, setScrollState] = useState(0)\n    const [nextState, setNextState] = useState(0)\n    const [refresh, setRefresh] = useState(false)\n    const [isScroll, setIsScroll] = useState(false)\n    // const [chatStatus, setChatStatus] = useState(chat)\n\n    let user = useContext(UserContext)\n    \n    useEffect(() => {\n        const thread = document.getElementById(\"msgs\")\n        const scrollMax = thread.scrollHeight-thread.offsetHeight\n        // const scroll = thread.scrollTop;\n        // console.log(scroll,scrollMax)\n        // if(scrollMax === 0) {\n        //     // console.log('scroll',false,scroll,scrollMax)\n        //     setIsScroll(false)\n        // } else {\n        //     // console.log('scroll',true,scroll,scrollMax)\n        //     setIsScroll(true)\n        // }\n        setScrollState(scrollMax)\n        setNextState(next)\n        setMessCount(messages.length)\n        // if(chatStatus !== chat) {\n            // setChatStatus(chat)\n\n            // ToBottom(5)\n            // setTimeout((setVisibleButton)=>{\n            //     // console.log('butt',false)\n            //     setVisibleButton(false)\n            // },105,setVisibleButton)\n            // console.log(isScroll)\n            // console.log(scroll,scrollMax)\n\n\n            // console.log(scrollMax)\n            // if(scrollMax===0) setIsScroll(false)\n            // console.log(scroll,scrollMax)\n        // }\n        // console.log('status',chatStatus)\n        // if(messages.length<25) \n        // console.log('пися1')\n\n        if(messCount !== messages.length){\n            setRefresh(true)\n            // console.log('пися2')\n            // if(messages[messages.length-1].username === user.username) ToBottom()\n            if(isBottom) ToBottom()\n            if(next>1 && next !== nextState) return ScrollTo(scrollMax-scrollState)\n            // console.log('msgs')\n            ToBottom()\n\n\n            \n            // console.log(next,scrollMax,scrollState)\n            \n        }\n        // ToBottom()\n    }, [messages,user,messCount,isBottom,next,nextState,scrollState,chat,setVisibleButton])\n\n    \n\n    // useEffect(() => {\n    //     effect\n        \n    // })\n    \n    function scrollHandler() {\n        // console.log('scroll')\n        const thread = document.getElementById(\"msgs\")\n        const scrollMax = thread.scrollHeight-thread.offsetHeight\n        const scroll = thread.scrollTop;\n\n        // console.log(scroll,scrollMax)\n        if(scrollMax-scrollMax*0.10<=scroll){\n            if(refresh){\n                // console.log('suka')\n                // socket.emit('refresh_messages')\n                RefreshChat(chat)\n\n                setRefresh(false)\n            }\n            // console.log('set false')\n\n            setIsScroll(false)\n            setVisibleButton(false)\n            setIsBottom(true)\n        }else{\n            setIsScroll(true)\n            setRefresh(true)\n            // console.log(scrollMax,scroll)\n            // console.log('butt',true)\n\n            setVisibleButton(true)\n            setIsBottom(false)\n        }\n\n        if(scroll===0 && scrollMax>0){\n            if(finishMessages) return\n\n            socket.emit('load_more_messages',{next,chat})\n        }\n    }\n\n\n    return (\n        <div className=\"thread-container\" id=\"msgs\" onScroll={scrollHandler}>\n            { loading ? (\n                <Loader loader=\"messages\" />\n            ) : (\n\t\t\t\t<div className=\"thread\" id=\"msgsInner\">\n                    {\n                        !finishMessages && isScroll ? <div className='msgload'><Loader loader='msgload' /></div> : ''\n                    }\n                    <CSSTransitionGroup\n                        transitionName={{\n                            enter: \"animated\",\n                            enterActive: \"zoomIn\",\n                            // leave: \"animated\",\n                            // leaveActive:\"fadeOut\",\n                        }}\n                        transitionEnterTimeout={400}\n                        transitionLeave={false}\n                    >\n                    {\n                        messages.map((msg,i)=>{               \n                            return <Message key={msg.id} message={msg.text} me={user.userId === msg.userId ? true : false} name={msg.username} avatarId={msg.avatar} userId={msg.userId} />\n                        })\n                    }\n                    </CSSTransitionGroup>\n                    {/* <ReactCSSTransitionGroup\n                        transitionName={{\n                            enter: \"animated\",\n                            enterActive: \"zoomIn\",\n                            leave: \"animated\",\n                            leaveActive:\"fadeOut\"\n                        }}\n                        transitionEnterTimeout={400}\n                        transitionLeaveTimeout={400}\n                        > */}\n                    \n                    {/* </ReactCSSTransitionGroup> */}\n\t\t\t\t</div>\n                )\n            }\n\n\t\t</div>\n    )\n}\n","import React,{useState, useContext,useEffect} from 'react'\nimport { Animated } from 'react-animated-css';\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { IconContext } from \"react-icons\";\nimport { UserContext } from '../../context/UserContext';\nimport { useTimer } from 'react-timer-hook';\nimport {useParams} from 'react-router-dom'\n\nexport default function MessageInput({visibleButton,socket,chat,typing,load}) {\n    const [inputText,setInputText] = useState(\"\");\n    const [type, setType] = useState('')\n    const {username,userId,avatar} = useContext(UserContext)\n    const paramsChatId = useParams().id\n\n\n    const time = new Date()\n    const timer = time.setSeconds(time.getSeconds() + 3);\n    const {restart,pause} = useTimer({ expiryTimestamp:timer, onExpire: () => {\n        socket.emit('send_typing_off',{username,chat})\n    } })\n\n    useEffect(()=>{\n        if(!typing[chat]) return setType('')\n        \n        if(typing[chat].length<=0){\n            setType('')\n        }\n        else if(typing[chat].length===1){\n            setType(`${typing[chat][0]} кастует...`);\n        }\n        else if(typing[chat].length===2){\n            setType(`${typing[chat][0]} и ${typing[chat][1]} кастуют...`);\n        }\n        else if(typing[chat].length===3){\n            setType(`${typing[chat][0]}, ${typing[chat][1]} и ${typing[chat][2]} кастуют...`);\n        }\n        else{\n            setType(`Кастуется мегазаклинание...`);\n        }\n    },[typing,chat])\n\n    const keyUpHandler = (e) => {\n        if(load) return\n\n        if(e.key===\"Enter\") return;\n        socket.emit('send_typing_on',{username,chat})\n        const time = new Date()\n        const timer = time.setSeconds(time.getSeconds() + 3);\n        restart(timer)\n\n    }\n\n    const keyDownHandler = (e) =>{\n        if(!(e.key===\"Enter\" && e.shiftKey)){\n            if(e.key===\"Enter\"){\n                e.preventDefault()\n                if(load) return\n                sendMessage(inputText)\n            }\n        }\n    }\n\n    const sendButtonHandler = (e)=>{\n        e.preventDefault()\n        document.getElementById(\"message\").focus();\n        sendMessage(inputText)\n    }\n\n    const sendMessage = (text) => {\n        pause()\n        socket.emit('send_typing_off',{username,chat})\n        if(!text) return \n        setInputText('')\n        let sendTo = 'community'\n        if(paramsChatId) sendTo = paramsChatId\n        socket.emit('send_message',{text,username,userId,avatar,chat,sendTo})\n    }\n\n    const scrollDownHandler = () =>{\n        const thread = document.getElementById(\"msgs\")\n        thread.scrollTo({\n            top:thread.scrollHeight\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"scrollContainer\">\n                <Animated animationIn=\"bounceIn\" animationOut=\"zoomOutDown\" animationOutDuration={400} animationInDuration={400} isVisible={visibleButton} animateOnMount={false}>\n                <button id=\"scrollBottom\" onClick={scrollDownHandler}>\n                    <IconContext.Provider value={{ color: \"white\", size:\"26px\" }}>\n                        <IoIosArrowDown/> \n                    </IconContext.Provider> \n                </button>\n                </Animated>\n            </div>\n            \n            <div className=\"typing-user animated infinite pulse\">\n                    <span>{type}</span> \n            </div>\n            <div className=\"message-input\">\n                \n                    <form \n                        onSubmit={ (e)=>{ e.preventDefault() } }\n                        className=\"message-form\">\n\n                        <textarea \n                            id = \"message\"\n                            autoFocus = {true}\n                            type = \"text\"\n                            className = \"form-control\"\n                            value = { inputText }\n                            autoComplete = 'off'\n                            placeholder = \"Напиши что-то интересное\"\n                            onChange = {\n                                ({target})=>{\n                                \tsetInputText(target.value)\n                                }\n                            }\n                            onKeyDown={keyDownHandler}\n                            onKeyUp={keyUpHandler}\n                            />\n                        {/* <div contentEditable='true'\n                            className = \"form-control message-input\"\n                        >\n                            Напишите что то интересное\n                        </div> */}\n                        <button\n                            disabled = {load} \n                            type = \"submit\"\n                            className = \"send\"\n                            onClick={sendButtonHandler}\n                        > ➤ </button>\n                    </form>\n\n            </div>\n        </div>\n\n    )\n}\n","import {useLayoutEffect,useState} from 'react'\n\nexport const useWindowSize = () => {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n      }\n      window.addEventListener('resize', updateSize);\n      updateSize();\n      return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { getAvatarUrl } from '../scripts/extra'\n\nexport default function Friend({username,userId,avatar}) {\n    return (\n        <div className=\"friend-container\">\n            <div>\n                <Link to={`/profile/${userId}`}>\n                    {/* Пофиксить гифки аватарок!! */}\n                    <img className=\"avatar\" src={getAvatarUrl(avatar,65)} alt=\"friend-avatar\"/>\n                </Link>\n            </div>\n            <div className=\"username\">{username}</div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function FriendRequest({username,userId,requestHandler}) {\n    const acceptHandler = () =>{\n        requestHandler(userId,true)\n    }\n\n    const rejectHandler = () =>{\n        requestHandler(userId,false)\n    }\n\n    return (\n        <div className=\"request\">\n            <span>Пользователь {username} хочет добавить вас в друзья</span>\n            <div className=\"buttons\">\n                <button onClick={acceptHandler} className=\"accept\">Подтвердить</button>\n                <button onClick={rejectHandler} className=\"cansel\">Отклонить</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport './Profile.css'\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Friend from './Friend';\nimport { UserContext } from '../context/UserContext';\nimport useKonami from 'react-use-konami';\nimport { useHttp } from '../hooks/http.hook';\nimport { getAvatarUrl } from '../scripts/extra'\nimport {getTag} from '../scripts/extra'\nimport FriendRequest from './FriendRequest';\n\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/sketchcorp/upload'\nconst CLOUDINARY_UPLOAD_PRESET = 'da9k11cr'\n\nexport default function Profile({socket,setStatus,setAvatar,setEasterEgg,friends,requests}) {\n    const {username,avatar,status,tag,userId} = useContext(UserContext)\n    const [profStatus, setProfStatus] = useState('')\n    const [staticStatus,setStaticStatus] = useState('')\n    const [avatarStatic, setAvatarStatic] = useState(getAvatarUrl(null,180))\n    const { requestFormData } = useHttp()\n    // const paramUserId = useParams().id\n    \n    useKonami(()=>{\n        // console.log(\"konami\")\n        if(tag === 'dev') setEasterEgg(true) \n    },{\n        code: ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a']\n    })\n\n    useEffect(() => {\n        setProfStatus(status)\n        setStaticStatus(status)\n        if(!avatar) return\n        setAvatarStatic(getAvatarUrl(avatar,180))\n    }, [status,avatar])\n\n    useEffect(() => {\n        socket.emit('get_friend_requests')\n        socket.emit('get_friends')\n\n    }, [socket,userId])\n\n    const requestHandler = (userId,isAccept)=>{\n        socket.emit('request_handler',{userId,accept:isAccept})\n    }\n\n    const pressHandler = (e) =>{\n        if(e.key===\"Enter\") {\n            setStaticStatus(e.target.value)\n            setStatus(e.target.value)\n            socket.emit('update_status',{status:e.target.value})\n            e.target.blur()\n        }\n    }\n\n    const imageHandler = async e =>{\n        let file = e.target.files[0]\n        let formData = new FormData()\n        formData.append('file',file)\n        formData.append('upload_preset',CLOUDINARY_UPLOAD_PRESET)\n        setAvatarStatic(getAvatarUrl('v1581959183/levng698wjc23g8d5iua.gif',180))\n        try{\n            const {data} = await requestFormData(CLOUDINARY_URL, 'POST', formData)\n            let imageId = `v${data.version}/${data.public_id}.${data.format}`\n            setAvatarStatic(getAvatarUrl(imageId,180))\n            socket.emit('update_avatar',{avatar:imageId})\n            setAvatar(imageId)\n            if(avatar === \"v1581973009/w1xcn5v6tl80hw72lpts.png\") return\n            socket.emit('delete_avatar',{avatar})\n        } catch(e){\n            console.log(e)\n            alert(\"Ойййй... Что-то пошло не так при загрузке аватарки. Пожалуйста, нажмите Ctrl+Shift+I и сделайте скриншот консоли. Спасибо ^^ -Скетч\")\n            setAvatarStatic(getAvatarUrl(avatar,180))\n        }\n    }\n\n    return (\n        <>\n        <div className=\"profile-container\">\n            <div className=\"user-data\">\n                <div>\n                    <div className=\"image-upload\">\n                        <label htmlFor=\"avatar-input\">\n                            <div className=\"cover\">Загрузить</div>\n                            <img src={avatarStatic} alt=\"avatar\" />\n                        </label>\n                        <input onChange={imageHandler} id=\"avatar-input\" type=\"file\" accept=\"image/*\" />\n                    </div>\n                </div>\n                <div className=\"data-wrapper\">\n                <div className=\"username\">{username} {getTag(tag)}</div>\n                        <TextareaAutosize\n                        maxLength=\"190\"\n                        \n                        className=\"status\" \n                        type=\"text\" \n                        value={profStatus} \n                        onChange={({target})=>{\n                            setProfStatus(target.value)\n                        }}\n                        onBlur={({target})=>{\n                            target.value = staticStatus\n                        }}\n                        onKeyPress={pressHandler}\n                        />\n                </div>\n            </div>\n            <div className=\"requests-container\">\n                {\n                    requests.map(({username,userId},index)=>{\n                        return <FriendRequest key={index} username={username} userId={userId} requestHandler={requestHandler} />\n                    })\n                }\n            </div>\n        </div> \n        <div className=\"friends-header\">Друзья</div>\n        <div className=\"friends-container\" id=\"msgs\">\n            <div className=\"friends\" id=\"msgsInner\">\n                {\n                    friends.map(({username,userId,avatar},index)=>{\n                        return <Friend key={index} username={username} userId={userId} avatar={avatar} />\n                    })\n                }\n            </div>\n        </div>\n        <div className=\"friends-footer\"></div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useTimeout } from '../hooks/timeout.hook'\n\nexport default function EasterEgg() {\n    const [start, setStart] = useState(false)\n    const sound  = new Audio('/sounds/lightOff.mp3')\n\n    useTimeout(()=>{\n        setStart(true)\n    },3*1000,{ persistRenders: false })\n\n    useEffect(() => {\n        sound.play()\n    }, [sound])\n    if(start) return (\n        <div className=\"easter-egg\">\n                <video autoPlay={true} src=\"/videos/dark.mp4\"></video>\n        </div>\n    )\n    return (\n        <div className=\"easter-egg\">\n            <div></div>\n            \n            \n        </div>\n    )\n}\n","import { useEffect } from 'react';\n// import { render } from 'react-dom';\n// import Hello from './Hello';\n// import './style.css';\n\n//\n// useTimeout React Hook\n//\n// React hook for delaying calls with time\nexport const useTimeout = (\n  callback, // function to call. No args passed.\n  timeout = 0, // delay, ms (default: immediately put into JS Event Queue)\n  {\n    // manage re-render behavior.\n    // by default, a re-render in your component will re-define the callback,\n    //    which will cause this timeout to cancel itself.\n    // to avoid cancelling on re-renders (but still cancel on unmounts),\n    //    set `persistRenders: true,`.\n    persistRenders = false,\n  } = {},\n  // These dependencies are injected for testing purposes.\n  // (pure functions - where all dependencies are arguments - is often easier to test)\n  _setTimeout = setTimeout,\n  _clearTimeout = clearTimeout,\n  _useEffect = useEffect,\n) => {\n  let timeoutId;\n  const cancel = () => timeoutId && _clearTimeout(timeoutId);\n\n  _useEffect(\n    () => {\n      timeoutId = _setTimeout(callback, timeout);\n      return cancel;\n    },\n    persistRenders\n      ? [_setTimeout, _clearTimeout]\n      : [callback, timeout, _setTimeout, _clearTimeout],\n  );\n\n  return cancel;\n}\n\n","import React, { useState, useEffect, useContext } from 'react'\nimport './OtherProfile.css'\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Friend from './Friend';\nimport { UserContext } from '../context/UserContext';\nimport useKonami from 'react-use-konami';\nimport { getAvatarUrl } from '../scripts/extra'\nimport { useParams } from 'react-router-dom'\nimport { useHistory,Link } from 'react-router-dom';\nimport {getTag} from '../scripts/extra'\n\nexport default function OtherProfile({socket,setEasterEgg,usersProfile}) {\n    const {userId} = useContext(UserContext)\n    const [load, setLoad] = useState(true)\n    const [profStatus, setProfStatus] = useState('')\n    const [avatarStatic, setAvatarStatic] = useState(getAvatarUrl(null,180))\n    const [usernameProfile, setUsernameProfile] = useState('')\n    const [tag, setTag] = useState('')\n    const [friends, setFriends] = useState([])\n    const [isFriend, setIsFriend] = useState(false)\n    const history = useHistory()\n\n    const paramUserId = useParams().id\n    \n    useKonami(()=>{\n        if(usersProfile[paramUserId].tag === 'dev') setEasterEgg(true) \n    },{\n        code: ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a']\n    })\n\n    useEffect(() => {\n        if(userId === paramUserId) return history.push('/profile')\n        if(!usersProfile[paramUserId]) return\n        if(!usersProfile[paramUserId].exist) return history.push('/profile')\n        for(let i = 0; i < usersProfile[paramUserId].friends.length;i++){\n            if(usersProfile[paramUserId].friends[i].userId===userId) setIsFriend(true)\n        }\n        setLoad(false)\n        setUsernameProfile(usersProfile[paramUserId].username)\n        setProfStatus(usersProfile[paramUserId].status)\n        setAvatarStatic(getAvatarUrl(usersProfile[paramUserId].avatar,180))\n        setTag(usersProfile[paramUserId].tag)\n        setFriends(usersProfile[paramUserId].friends)\n        \n    }, [paramUserId,usersProfile,history,userId])\n\n    useEffect(() => {\n        socket.emit('get_other_user',{userId:paramUserId})\n    }, [socket,paramUserId])\n\n    const addFriendHandler = () => {\n        socket.emit('add_friend',{friendId:paramUserId})\n        alert(\"Запрос в друзья отправлен!\")\n    }\n\n    const deleteFriendHandler = () =>{\n        setIsFriend(false)\n        socket.emit('delete_friend',{friendId:paramUserId})\n        socket.emit('get_other_user',{userId:paramUserId})\n    }\n\n    return (\n        <>\n        <div className=\"other-profile-container\">\n            <div className=\"user-data\">\n                <div>\n                    <div className=\"image-upload\">\n                        <label htmlFor=\"avatar-input\">\n                            <img src={avatarStatic} alt=\"avatar\"/>\n                        </label>\n                    </div>\n                </div>\n                <div className=\"data-wrapper\">\n                    <div className=\"username\">{usernameProfile} {getTag(tag)}</div>\n                    <TextareaAutosize\n                    maxLength=\"190\"\n                    className=\"status\" \n                    type=\"text\" \n                    value={profStatus} \n                    readOnly={true}\n                    />\n                    <div className=\"buttons\">\n                        <Link to={`/direct/${paramUserId}`}>\n                        <button disabled={load}>Написать</button>                        \n                        </Link>\n                        {\n                            !isFriend ?\n                            <button disabled={load} onClick={addFriendHandler}>Добавить в друзья</button>\n                            :\n                            <button disabled={load} onClick={deleteFriendHandler}>Удалить из друзей</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div> \n        <div className=\"friends-header\">Друзья</div>\n        <div className=\"friends-container\" id=\"msgs\">\n            <div className=\"friends\" id=\"msgsInner\">\n                {\n                    friends.map(({username,userId,avatar},index)=>{\n                        return <Friend key={index} username={username} userId={userId} avatar={avatar} />\n                    })\n                }\n            </div>\n        </div>\n        <div className=\"friends-footer\"></div>\n        </>\n    )\n}\n","import './Main.css'\nimport React,{useState, useEffect, useContext} from 'react'\nimport SideBar from '../components/chats/SideBar'\nimport ChatHeading from '../components/chats/ChatHeading'\nimport Messages from '../components/messages/Messages'\nimport MessageInput from '../components/messages/MessageInput'\nimport { Animated } from 'react-animated-css'\nimport { useWindowSize } from '../hooks/winsize.hook'\nimport { AuthContext } from '../context/AuthContext'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {UserContext} from '../context/UserContext'\nimport useSocket from 'use-socket.io-client'\nimport Profile from '../components/Profile'\nimport EasterEgg from '../components/EasterEgg'\nimport OtherProfile from '../components/OtherProfile'\nimport { ToBottom } from '../scripts/extra'\n\nexport default function Main({chatRoute,otherProfile,direct}) {\n    const auth = useContext(AuthContext)\n    const paramsChatId = useParams().id\n    let community = 'community'\n    const [isChat,setIsChat] = useState(true)\n    const [hide, setHide] = useState(false)\n    const [visibleButton, setVisibleButton] = useState(false)\n    const history = useHistory()\n    const [user, setUser] = useState({\n        username:'',avatar:'',userId:'',status:'',load:true\n    })\n    const [chat,setChat] = useState(null)\n    const [loadMessages,setLoadMessages] = useState(true)\n    const [chats, setChats] = useState({})\n    const [chatButtons, setChatButtons] = useState([])\n    const [typingChats,setTypingChats] = useState({})\n    const [width] = useWindowSize()\n    const [easterEgg, setEasterEgg] = useState(false)\n    const [usersProfile, setUsersProfile] = useState({})\n    const [friendRequests, setFriendRequests] = useState([])\n    const [friends, setFriends] = useState([])\n    const [finishMessages, setFinishMessages] = useState(false)\n\n    const [loadChats, setLoadChats] = useState({})\n    \n    const [socket] = useSocket({\n        query: {\n            token:auth.token\n        },\n        autoConnect: false\n    });   \n\n    useEffect(()=>{\n        socket.on('connect',()=>{\n            // console.log(\"Connected\")\n        })\n        socket.on('reload', ()=>{\n            auth.reload()\n        })\n        socket.on('logout', ()=>{\n            auth.logout()\n            history.push('/')\n        })\n        socket.on('load_user_info',(user)=>{\n            setUser({...user,load:false})\n        })\n        socket.on('load_info',({messages,chatButtonsPush,lasts}) =>{ \n            if(!direct) {\n                setLoadMessages(false)\n            }           \n            // console.log(lasts)\n            let last = null\n            if(messages.length > 0){\n                let text = messages[messages.length-1].text\n                let textLast = text.slice(0,15);\n                if (textLast.length < text.length) {\n                    textLast += '...';\n                }\n                last = {...messages[messages.length-1],text:textLast}\n            }\n            let chats = {[community]:{messages:[...messages],last,typing:[],next:1}}\n            for(let i = 0; i<lasts.length;i++){\n                \n                chats = {...chats,[lasts[i].chatId]:{messages:[],typing:[],next:1,last:lasts[i]}}\n            }\n            setChats(chats)\n            setChatButtons([...chatButtonsPush])\n            setLoadChats({})\n        })\n        socket.on('push_more_messages',({messages,isFinish,chat})=>{\n            setFinishMessages(isFinish)\n            setChats({...chats,[chat]:{messages:[...messages,...chats[chat].messages],last:chats[chat].last,typing:chats[chat].typing,next:chats[chat].next+1}})\n        })\n        socket.on('push_message',({id,chat,username,userId,text,avatar})=>{\n            let message = {id,username,userId,text,avatar}\n            let currentMessages = chats[chat] ? chats[chat].messages : []\n            let currentTyping = chats[chat] ? chats[chat].typing : []\n\n            var textLast = text.slice(0,15);\n            if (textLast.length < text.length) {\n                textLast += '...';\n            }\n            setChats({...chats,[chat]:{messages:[...currentMessages,message],last:{...message,text:textLast},typing:[...currentTyping]}})\n        })\n        socket.on('push_typing_on',({username,chat})=>{\n            let currentTyping = typingChats[chat] ? typingChats[chat] : []\n            \n            if (currentTyping.indexOf(username) < 0) {\n                currentTyping.push(username);\n            }\n            if (currentTyping.indexOf(user.username) > -1) {\n                currentTyping.splice(currentTyping.indexOf(user.username), 1);\n            }\n            \n            setTypingChats({...typingChats,[chat]:currentTyping})\n        })\n        socket.on('push_typing_off',({username,chat})=>{\n            let currentTyping = typingChats[chat] ? typingChats[chat] : []\n            \n            if (currentTyping.indexOf(username) > -1) {\n                currentTyping.splice(currentTyping.indexOf(username), 1);\n            }\n            \n            setTypingChats({...typingChats,[chat]:currentTyping})\n        })\n        socket.on('push_other_user',({exist,userId,username,status,avatar,tag,friends})=>{\n            if(!exist) {\n                return setUsersProfile({...usersProfile,[userId]:{exist:false}})   \n            }\n            setUsersProfile({...usersProfile,[userId]:{exist:true,username,status,avatar,tag,friends}})\n\n        })\n        socket.on('push_friend_requests',(friendRequests)=>{\n            setFriendRequests(friendRequests)\n        })\n        socket.on('push_friends',(friends)=>{\n            // console.log('push_friends')\n            setFriends(friends)\n        })\n        socket.on('update_chat_buttons',({userIds,usernameIds,avatars,chatId})=>{\n            // console.log('update chat')\n            let notMe = 0\n            if(userIds[notMe]===user.userId) notMe = 1\n            setChatButtons([...chatButtons,{userId:userIds[notMe],username:usernameIds[notMe],avatar:avatars[notMe],chatId}])\n        })\n        socket.on('push_chat_messages',({chatId,status,messages,userId})=>{\n            if(!status) return history.push('/chat')\n            setLoadMessages(false)\n            setChat(chatId)\n            if(!loadChats[userId]) setLoadChats({...loadChats,[userId]:chatId}) \n            let last = null\n            if(messages.length > 0){\n                let text = messages[messages.length-1].text\n                let textLast = text.slice(0,15);\n                if (textLast.length < text.length) {\n                    textLast += '...';\n                }\n                last = {...messages[messages.length-1],text:textLast}\n            }\n            setChats({...chats,[chatId]:{messages:[...messages],last,typing:[],next:1}})\n            ToBottom()\n        })\n\n        return(\n            ()=>{\n                socket.removeAllListeners();\n            }\n        )\n    },[socket,chats,history,auth,user,typingChats,usersProfile,chat,direct,community,chatButtons,loadChats,setLoadChats])\n\n    useEffect(() => {\n        if(!direct) setChat('community')\n\n        if(otherProfile) return\n        if(!paramsChatId) return\n\n        if(loadChats[paramsChatId]) return setChat(loadChats[paramsChatId])\n    \n        setLoadMessages(true)\n        socket.emit('get_chat_messages',{userId:paramsChatId})\n    }, [socket,paramsChatId,chat,direct,otherProfile,loadChats])\n\n    useEffect(()=>{\n        socket.connect();\n        // console.log('connect')\n    },[socket])\n    \n    function viewSwitch(){\n        if(width>510) return\n        if(isChat){\n            setTimeout((setHide)=>{\n                setHide(true)\n            },400,setHide)\n        }else{\n            setHide(false)\n        }\n        setIsChat(!isChat)\n    }\n\n    const setStatus = (status) => {\n        setUser({...user, status})\n    }\n\n    const setAvatar = (avatar) => {\n        setUser({...user, avatar})\n    }\n\n    const RefreshChat = (chat) =>{\n        let messages = chats[chat] ? chats[chat].messages || [] : []\n        \n        if(messages.length<=25) return\n\n        messages = messages.slice(messages.length-25)\n\n        setFinishMessages(false)\n        \n        let last = null\n        if(messages.length > 0){\n            let text = messages[messages.length-1].text\n            let textLast = text.slice(0,15);\n            if (textLast.length < text.length) {\n                textLast += '...';\n            }\n            last = {...messages[messages.length-1],text:textLast}\n        }\n\n        setChats({...chats,[chat]:{messages:[...messages],last,typing:[],next:1}})\n        ToBottom()\n    }\n\n    const getChatHeader = (chat) => {\n        if(chat==='community') return 'Community'\n        for(let i=0; i < chatButtons.length; i++){\n            if(chatButtons[i].chatId === chat) return chatButtons[i].username\n        }\n        return 'noname'\n    }\n\n\n    if(easterEgg){\n        return <EasterEgg />\n    }\n\n    return (\n        <UserContext.Provider value={{ username: user.username, avatar: user.avatar, userId:user.userId,status:user.status,tag:user.tag,load:user.load }} >\n            <link rel=\"stylesheet\" href=\"/themes/Dark.css\"/>\n            <div className=\"container\">\n                { chatRoute ?\n                <Animated style={width<=510 ? {width:\"100%\",height:\"100%\"} :  {width:\"76.25%\",height:\"100%\"}} animationIn=\"slideInLeft\" animationOut=\"slideOutLeft\" animationInDuration={400} animationOutDuration={400} isVisible={isChat} animateOnMount={false}> \n                <div style={{width:\"100%\"}} className={\"chat-room-container\" + (!hide ? \" chat-active\": \" chat-hide\")}>\n                    <div className=\"chat-room\">\n                        <ChatHeading title={getChatHeader(chat)} barSwitch={viewSwitch} />\n                        <Messages RefreshChat={RefreshChat} finishMessages={finishMessages} chat={chat} next={chats[chat] ? chats[chat].next : 0} messages={chats[chat] ? chats[chat].messages : []} setVisibleButton={setVisibleButton} visibleButton={visibleButton} loading={loadMessages} socket={socket} />\n                        <MessageInput setChats={setChats} load={loadMessages} typing={typingChats} chat={chat} socket={socket} visibleButton={visibleButton} />\n                    </div>\n                </div>\n                </Animated>\n                :\n                <Animated style={width<=510 ? {width:\"100%\",height:\"100%\"} :  {width:\"76.25%\",height:\"100%\"}} animationIn=\"slideInLeft\" animationOut=\"slideOutLeft\" animationInDuration={400} animationOutDuration={400} isVisible={isChat} animateOnMount={false}> \n                <div style={{width:\"100%\"}} className={\"chat-room-container\" + (!hide ? \" chat-active\": \" chat-hide\")}>\n                    <div className=\"chat-room\">\n                        <ChatHeading title={\"Профиль\"} barSwitch={viewSwitch} />\n                        {\n                            !otherProfile ?\n                            <Profile friends={friends} requests={friendRequests} setAvatar={setAvatar} setEasterEgg={setEasterEgg} setStatus={setStatus} socket={socket} />\n                            :\n                            <OtherProfile usersProfile={usersProfile} setEasterEgg={setEasterEgg} socket={socket} />\n                        }\n                    </div>\n                </div>\n                </Animated>\n                } \n                <SideBar chatButtons={chatButtons} chatRoute={chatRoute} chats={chats} chat={chat} socket={socket} viewState={width<=510 ? !isChat : false} chatSwitch={viewSwitch} hide={width<=510 ? !hide : false} />\n            </div>\n        </UserContext.Provider>\n    )\n}\n","import React from 'react';\nimport './index.css';\n// import Chat from './pages/Chat';\nimport { BrowserRouter as Router } from 'react-router-dom';\n// import ChatContainer from './components/chats/ChatContainer';\nimport { useRoutes } from './routes';\nimport { useAuth } from './hooks/auth.hook';\nimport Loader from './components/Loader';\nimport { AuthContext } from './context/AuthContext';\n// import EasterEgg from './components/EasterEgg';\n\n\nfunction App() {\n  const {token,login,logout,reload,userId,ready} = useAuth()\n  const isAuthenticated = !!token;\n  const routes = useRoutes(isAuthenticated);\n\n\n  if(!ready){\n    return <Loader loader=\"main\"/>\n  }\n\n  \n\n  return (\n    <AuthContext.Provider value={{\n      token,login,logout,reload,userId,isAuthenticated\n    }}>\n      <Router>\n            {routes}\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import {useState,useCallback,useEffect} from 'react'\n\nconst storageName = 'Pony'\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null)\n    const [ready, setReady] = useState(false)\n    const [userId, setUserId] = useState(null)\n    const [username, setUsername] = useState(null)\n\n    const login = useCallback((jwtToken,id,username)=>{\n        setToken(jwtToken)\n        setUserId(id)\n        setUsername(username)\n\n        localStorage.setItem(storageName,JSON.stringify({\n            token: jwtToken,userId: id,username\n        }))\n    },[])\n\n    const logout = useCallback(()=>{\n        setToken(null);\n        setUserId(null);\n        setUsername(null)\n        localStorage.removeItem(storageName)\n    },[])\n\n    const reload = useCallback(()=>{\n        const data = JSON.parse(localStorage.getItem(storageName))\n        if(!(data && data.token)) logout()\n    },[logout])\n\n    useEffect(()=>{\n        const data = JSON.parse(localStorage.getItem(storageName))\n        if(data && data.token){\n            login(data.token,data.userId,data.username)\n        }\n        setReady(true)\n    },[login])\n\n    return {login,logout,token,reload,userId,username,ready}\n}","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\n// import Chat from './pages/Chat'\nimport Login from './pages/Login'\nimport Register from './pages/Register'\n// import Wrapper from './Wrapper'\nimport Main from './pages/Main'\n\n\nexport const useRoutes = isAuthenticated =>{\n    if(isAuthenticated){\n        return(\n            <Switch>\n                <Route path='/chat' exact>\n                    <Main chatRoute={true} />\n                </Route>\n                <Route path='/profile' exact>\n                    <Main/>\n                </Route>\n                <Route path='/profile/:id' exact>\n                    <Main otherProfile={true} />\n                </Route>\n                <Route path='/direct/:id' exact>\n                    <Main chatRoute={true} direct={true} />\n                </Route>\n                <Redirect to=\"/chat\" />\n            </Switch>\n        )\n    }\n    return(\n        <Switch>\n            <Route path='/login' exact>\n                <Login />\n            </Route>\n            <Route path='/register' exact>\n                <Register />\n            </Route>\n            <Redirect to=\"/login\" />\n        </Switch>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}